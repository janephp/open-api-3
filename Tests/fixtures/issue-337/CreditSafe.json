{
  "openapi": "3.0.2",
  "info": {
    "title": "Creditsafe Connect OpenAPI Documentation",
    "description": "<h2>Introduction</h2> Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\">Creditsafe Global Company Database</a> allowing you to control your master data, utlise up-to-date Business and Director information to enhance your onboarding and qualification processes, and get alerts when your customer's and supplier's Credit Report changes. <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>\nUsing a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br>\nUse the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.\n<h2>Resources</h2> <ul> <li><a href=\"https://creditsafe.github.io/connect-docs/swagger.html\">OpenAPI</a> specification. <li><a href=\"https://www.getpostman.com/collections/3aa74cc7318e44aeb96d\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> <li><a href=\"https://connect-portal.creditsafe.com\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> <li><a href=\"https://creditsafe.freshdesk.com/en/support/solutions/categories/7000007071/folders/7000018640\"> Help Articles</a>  including FAQs, Data Dictionaries and a Feature Availability Matrix. </ul>",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://connect.creditsafe.com/v1"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoint to generate a Bearer JWT (Authentication Token). It is mandatory to include this token under the Header  `Authorization` When calling all other endpoints as proof of authenticity. Tokens can exist concurrently and persist for 1 hour from its issued time."
    },
    {
      "name": "Companies",
      "description": "Endpoints to search for Companies in the Creditsafe Global Company Database. When a company is found you can use the `connectId` to order their Company Credit Report. The Company Credit Report is a JSON object comprising of key business and financial data points such as Credit Score & Limit, Industry Code, Directors, Balance Sheet and Negative Information. A full list of Company data points can be found in the Data Matrix, in the help resources. "
    },
    {
      "name": "People/Directors",
      "description": "Endpoints to find People/Directors and order Director Reports. A Director Report will contain a person's registered information and Active & Previous Directorships, where available. This endpoint is not advised to get a list of directors for a specifc Company. Instead, order a Company Credit Report using the `/companies/{id}` endpoint, and use  the `directors` section in the response."
    },
    {
      "name": "Images",
      "description": "Endpoints to order official Company Image Documents from original sources. Company Filings such as Annual Account Statements, Annual Returns, Liquidations and Changes of Registered Information can be downloaded as PDFs, and are typically used as a resource in extended company auditing/compliance."
    },
    {
      "name": "Fresh Investigations",
      "description": "Endpoints to manage Fresh Investigation requests. With the need for accurate data, you can check on any company that is not available within our instant online database by placing a Fresh Investigation (Offline Order). Depending on the market, the information we obtain will vary. Using official sources and registries we are able to quickly answer questions about a companyâ€™s stability and financial health. Where official information is not available we will conduct a direct interview with the business."
    },
    {
      "name": "Global Monitoring",
      "description": "Endpoints to Monitor changes to Company Information. Company changes can be retrived by creating a Porfolio (a collection of companies) and configuring the `eventRules` (the criteria in which to trigger a change, e.g. company name changes, limit changes) on the portfolio. When a company in your Portfolio changes to satisfy an eventRule, a `notificationEvent` will be raised to inform you of the nature of the change. See <a href=\"https://www.creditsafe.com/gb/en/credit-risk/credit-reports/company-credit-reports/company-monitoring.html\"> here</a> for Creditsafe's Global Monitoring capabilities."
    },
    {
      "name": "Decision Engine",
      "description": "Endpoints to run bespoke credit decisions on Companies. You can find more information on the Decision Engine <a href=\"https://www.creditsafe.com/us/en/enterprise/integrations/decision-engine.html\"> here</a>"
    },
    {
      "name": "Compliance Beta",
      "description": "The focus on screening clients and third parties is increasing. International regulators are demanding that firms improve their ongoing sanctions screening process. LexisNexis World Compliance data through Connect allows customers to mitigate risk around Anti-Bribery and Corruption under local and international regulations such as the UK Bribery Act, by enabling users to screen their third party agents, suppliers or employees against watch lists.  With LexisNexis World Compliance through Creditsafe Connect, compliance is easy, efficient and cost-effective, even as the regulatory mountain grows. </br></br> Please be aware endpoints under this resource are marked as temporary/beta and may be changed/renamed with less notice than normal."
    },
    {
      "name": "Local Solutions",
      "description": "A toolbox of country-specific functionality. See the description under each endpoint for more information on a particular solution."
    }
  ],
  "paths": {
    "/authenticate": {
      "post": {
        "security": [],
        "tags": [
          "Authentication"
        ],
        "description": "Enter your username and password into the request schema to generate an Authorization Token",
        "operationId": "Generate Authentication Token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/authenticationRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/authenticationSuccessResponse"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access denied -  Please check that your username and password are correct.  Please be aware that usernames and passwords are case sensitive. If the problem persists, please contact your Creditsafe account manager."
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "description": "Endpoint to search for Companies based on the provided Search Criteria. To get the most relevant results, it is recommended to use a unique identifier such as `regNo` where available. If a unique identifier is not available, use a combination of the companies registered `postCode` and `name` for the next best hit rate.",
        "operationId": "Company Search",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "countries",
            "in": "query",
            "example": "GB",
            "description": "A Comma-separated list of country codes to search for Companies in. The list takes ISO/Alpha 2 format country codes. For example US,GB represents searching for Companies in the United States and Great Britain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Search Language -  Typically only used for Countries where more than one  Company Names exist in different languages. Such as Companies with a Japanese Kanji and English names.",
            "schema": {
              "pattern": "^[a-zA-Z]{2}$",
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "connectId - The primary Company identifier that is used to uniquely identify all companies across Creditsafes Universe and Partner Network. This is returned on all Company Search Results. Use this field to use in other operations such as Ordering Company Credit Report by Id, and Adding Company to Monitoing Portfolio. </br></br> [Searching by connectID is a slightly redundant operation (can be used as a fast-lookup to Search Result fields) as the purpose of Search is to obtain this identifier].",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "safeNo",
            "in": "query",
            "description": "Safe Number - Creditsafe's identifier on all Companies owned in the Creditsafe Universe. This is returned on all Company Search Results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regNo",
            "in": "query",
            "description": "Local Company Identifier - The Company identifier typically associated with a Government Filing Agency. i.e. French SIREN/SIRET, United Kingdom Companies House CRN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vatNo",
            "in": "query",
            "description": "Company VAT Number",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Company Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tradeName",
            "in": "query",
            "description": "Trade Name of the Company, typically used in Countries where Name is not uniquely registered.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "acronym",
            "in": "query",
            "description": "A (non-unique) identifier to look for Companies by their more commonly known acronym rather than their lesser known full name. Acronym is predominantly available on French Companies.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Provide as true to find Companies matching a Name exactly.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "street",
            "in": "query",
            "description": "Address part identifier - Street of the Company",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseNo",
            "in": "query",
            "description": "Address part identifier - House/Building Number of the Company",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address part identifier - City of the Company",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postCode",
            "in": "query",
            "description": "Address part identifier - Postcode/Zip Code of the Company. Can be provided partially to extend to a region with a * as a wildcard. I.e. CF* can represnt all postcodes starting with CF.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "province",
            "in": "query",
            "description": "Address part identifier - Province/State of the Company",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Phone Number of the Company",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "officeType",
            "in": "query",
            "description": "Indicates whether the Company is a Head Office or a Branch",
            "schema": {
              "type": "string",
              "enum": [
                "headOffice",
                "branch"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Indicates whether the Company is Active/Trading",
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "nonactive"
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Indicates whether the Company is Limited or NonLimited. Countries without a concept of Limited/NonLimited Companies will not be affected by this parameter",
            "schema": {
              "type": "string",
              "enum": [
                "ltd",
                "nonltd"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of Companies per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success - returns valid Search Results, including empty results.",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/companySearchSuccessResult"
                    },
                    {
                      "$ref": "#/components/schemas/searchNoResultsError"
                    }
                  ]
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "operationId": "Company Credit Report",
        "description": "Orders a Company's Credit Report by connectId. Set the content-type of the request to `application\\pdf` to receive a PDF of the report instead of JSON.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Report Language - The JSON structure of the Report is language invariant, but field content will return as the given language, where available.",
            "schema": {
              "pattern": "^[a-zA-Z]{2}$",
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "template",
            "in": "query",
            "description": "Optional parameter to request a Templated Company Report. A Template adds/reduces sections of the Credit Report depending on your subscription. Do not include this parameter if you have not been given a template to use.",
            "schema": {
              "type": "string",
              "default": "full"
            }
          },
          {
            "name": "customData",
            "in": "query",
            "description": "A Key-Value pair (as a string format key::value) that is required for certain Report requests. I.e. German Report Reason Code. Use /reportcustomdata/{country} endpoint to see the necessary structure/values.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The connectId (optionally Safe Number where available) of the Company required to order their Credit Report. Obtained from `/companies` search results.",
            "required": true,
            "example": "GB-0-03836192",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/gbCompanyReportExampleResponse"
                    }
                  ]
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "x-amf-responsePayloads": [
              {
                "mediaType": "text/html",
                "schema": {}
              },
              {
                "mediaType": "application/pdf",
                "schema": {}
              },
              {
                "mediaType": "text/pdf",
                "schema": {}
              }
            ]
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/companies/searchcriteria": {
      "get": {
        "tags": [
          "Companies"
        ],
        "description": "Returns the set of available Company Search parameters/fields for a provided list of countries.",
        "operationId": "Company Search Criteria",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "countries",
            "in": "query",
            "description": "A comma separated list of ISO/Alpha 2 format country codes, or singular country Code. e.g. US,GB will return the common searchable Company fields in the United States and Great Britain.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "Countries": [
                      "GB",
                      "DE"
                    ],
                    "CriteriaSets": [
                      {
                        "id": {
                          "required": true
                        },
                        "type": {
                          "allowedValues": [
                            "Limited",
                            "NonLimited"
                          ]
                        }
                      },
                      {
                        "safeNo": {
                          "required": true
                        },
                        "type": {
                          "allowedValues": [
                            "Limited",
                            "NonLimited"
                          ]
                        }
                      },
                      {
                        "regNo": {},
                        "vatNo": {},
                        "name": {},
                        "exact": {},
                        "address": {},
                        "city": {},
                        "postCode": {},
                        "status": {
                          "allowedValues": [
                            "Active",
                            "Inactive"
                          ]
                        },
                        "type": {
                          "allowedValues": [
                            "Limited",
                            "NonLimited"
                          ]
                        }
                      }
                    ]
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/companies/schema/{countryCode}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "operationId": "Company Report JSON Schema",
        "description": "Returns the JSON schema of the companies/{connectId} endpoint for implementation in strong-typed languages.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "section",
            "in": "query",
            "description": "Use CompanyReportResponse for the Company Credit Report JSON schema, DirectorReportResponse for the Director Report JSON schema.",
            "schema": {
              "type": "string",
              "enum": [
                "CompanyReportResponse",
                "DirectorReportResponse"
              ]
            }
          },
          {
            "name": "template",
            "in": "query",
            "description": "For Templated Company Report JSON Schemas",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "ISO2 / Alpha 2 Country Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/access/countries": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Returns the available countries in your subscription by operation - Company Report, Director Report, Offline Reports and Monitoring.",
        "operationId": "Countries In Subscription",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/accessCountriesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/people": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "description": "Endpoint to find Directors based on search criteria to order a Creditsafe Director Report.",
        "operationId": "People/Director Search",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "countries",
            "in": "query",
            "description": "A comma-separated list of countries to search for People with registered directorships against. The list takes ISO/Alpha 2 format country codes. For example US,GB represents searching for People/Directorships in the United States and Great Britain.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "connectId - The primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regNo",
            "in": "query",
            "description": "Local Company Identifier - The Company identifier typically associated with a Government Filing Agency. i.e. French SIREN/SIRET, United Kingdom Companies House CRN",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "safeNumber",
            "in": "query",
            "description": "Safe Number - Creditsafe's identifier on all Companies owned in the Creditsafe Universe. This is returned on all Company Search Results",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peopleId",
            "in": "query",
            "description": "Person/Director Identifier - used to order a Director Report.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Person's First Name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Person's Last Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "Company Name of the Director's Company (Only use this for Directorship Searches, unavailable in Director Search)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyNumber",
            "in": "query",
            "description": "Local Registration Idenitifier of the Director's Company (Only use this for Directorship Searches, unavailable in Director Search).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "localDirectorNumber",
            "in": "query",
            "description": "Local Identifier of the Director, the PNR in GB.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateOfBirth",
            "in": "query",
            "description": "Person DOB - provide YYYY-MM-DD or YYYY-MM format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of directors per page",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/peopleSearchSuccessResult"
                    },
                    {
                      "$ref": "#/components/schemas/searchNoResultsError"
                    }
                  ]
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/people/{personId}": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "operationId": "Director Report",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Report Language - The JSON structure of the Report is language invariant, but field content will return as the given language, where available.",
            "schema": {
              "pattern": "^[a-zA-Z]{2}$",
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "personId",
            "in": "path",
            "description": "Identifier of the Person/Director required to order their Director Report. Obtained from `/people` search results.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z]{2}([0-9]{1,3})?[-]{1}[a-zA-Z0-9$]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gbPeopleReportReponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/people/searchcriteria": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "description": "Returns the set of available People Search parameters/fields for a provided list of countries.",
        "operationId": "People/Director Search Criteria",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "countries",
            "in": "query",
            "description": "A comma separated list of ISO/Alpha 2 format country codes, or singular country Code. e.g. US,GB will return the common searchable People/Director fields in the United States and Great Britain.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "countries": [
                      "DE",
                      "FR"
                    ],
                    "criteriaSets": [
                      {
                        "localDirectorNumber": {
                          "required": true
                        }
                      },
                      {
                        "firstName": {
                          "required": false
                        },
                        "lastName": {
                          "required": true
                        },
                        "dateOfBirth": {
                          "required": false
                        },
                        "company": {
                          "id": {
                            "required": false
                          },
                          "regNo": {
                            "required": false
                          },
                          "companyName": {
                            "required": false
                          }
                        },
                        "status": {
                          "allowedValues": [
                            "Current",
                            "Former",
                            "Active",
                            "Inactive"
                          ],
                          "required": false
                        },
                        "address": {
                          "city": {
                            "required": false
                          }
                        }
                      },
                      {
                        "firstName": {
                          "required": false
                        },
                        "lastName": {
                          "required": false
                        },
                        "dateOfBirth": {
                          "required": false
                        },
                        "company": {
                          "id": {
                            "required": true
                          },
                          "regNo": {
                            "required": false
                          },
                          "companyName": {
                            "required": false
                          }
                        },
                        "status": {
                          "allowedValues": [
                            "Current",
                            "Former",
                            "Active",
                            "Inactive"
                          ],
                          "required": false
                        },
                        "address": {
                          "city": {
                            "required": false
                          }
                        }
                      },
                      {
                        "firstName": {
                          "required": false
                        },
                        "lastName": {
                          "required": false
                        },
                        "dateOfBirth": {
                          "required": false
                        },
                        "company": {
                          "id": {
                            "required": false
                          },
                          "regNo": {
                            "required": true
                          },
                          "companyName": {
                            "required": false
                          }
                        },
                        "status": {
                          "allowedValues": [
                            "Current",
                            "Former",
                            "Active",
                            "Inactive"
                          ],
                          "required": false
                        },
                        "address": {
                          "city": {
                            "required": false
                          }
                        }
                      },
                      {
                        "firstName": {
                          "required": false
                        },
                        "lastName": {
                          "required": false
                        },
                        "dateOfBirth": {
                          "required": false
                        },
                        "company": {
                          "id": {
                            "required": false
                          },
                          "regNo": {
                            "required": false
                          },
                          "companyName": {
                            "required": true
                          }
                        },
                        "status": {
                          "allowedValues": [
                            "Current",
                            "Former",
                            "Active",
                            "Inactive"
                          ],
                          "required": false
                        },
                        "address": {
                          "city": {
                            "required": false
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/images/companies": {
      "get": {
        "security": [],
        "tags": [
          "Images"
        ],
        "description": "Returns the available Images for a given Company connectId.",
        "operationId": "Company Image Documents",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The company's connectId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "olderThan",
            "in": "query",
            "description": "Returns Images older than this date. Use with newerThan parameter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newerThan",
            "in": "query",
            "description": "Returns Images newer than this date. Use with olderThan parameter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listCompanyImages"
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "x-amf-responsePayloads": [
              {
                "mediaType": "text/html",
                "schema": {}
              },
              {
                "mediaType": "application/pdf",
                "schema": {}
              },
              {
                "mediaType": "text/pdf",
                "schema": {}
              }
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "x-codegen-request-body-name": "generated"
          }
        }
      }
    },
    "/images/companies/types": {
      "get": {
        "security": [],
        "tags": [
          "Images"
        ],
        "description": "Returns the type of Image that can be returned by for additional meta data.",
        "operationId": "Image Document Category Types",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "countries",
            "in": "query",
            "description": "Filter Images by country.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/gbImageTypesResponse"
                }
              }
            },
            "x-amf-mediaType": "application/json",
            "x-amf-responsePayloads": [
              {
                "mediaType": "text/html",
                "schema": {}
              },
              {
                "mediaType": "application/pdf",
                "schema": {}
              },
              {
                "mediaType": "text/pdf",
                "schema": {}
              }
            ]
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/images/{imageId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Endpoint to order an Image Document by Image ID.",
        "operationId": "Company Image",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Image ID retrieved from `images/companies`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image object as a binary stream.",
            "x-amf-mediaType": "application/json",
            "x-amf-responsePayloads": [
              {
                "mediaType": "text/html",
                "schema": {}
              },
              {
                "mediaType": "application/pdf",
                "schema": {}
              },
              {
                "mediaType": "text/pdf",
                "schema": {}
              }
            ]
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/freshInvestigations": {
      "post": {
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Places an order for a Fresh Investigation (Offline Report). Providing as much detail as possible about the Company, our team will use official sources and registries to quickly answer questions about a companyâ€™s stability and financial health. Fresh Investigations take 5.5 days on average to complete.",
        "operationId": "Request Fresh Investigation",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createFreshInvestigationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/submittedFreshInvestigationRepsonse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found "
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Fresh Investigations"
        ],
        "operationId": "List Submitted Fresh Investigations",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "transactionId",
            "in": "query",
            "description": "Fresh Investigation Identifier used internally and with our data partners.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportCreatedAfter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Fresh Investigations processed after this date",
            "example": "2020-01-01T11:23:56Z"
          },
          {
            "name": "reportCreatedBefore",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns ordered Fresh Investigations that were processed before this date",
            "example": "2020-01-01T11:23:56Z"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Fresh Investigations created before this date"
          },
          {
            "name": "createdSince",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns ordered Fresh Investigations created after this date"
          },
          {
            "name": "lookUpOrderBy",
            "description": "Use to search for your Fresh Investigations by either the returned Company Details in the `GET` `freshInvestigations/{orderId}` endpoint or your supplied Search Criteria in the `POST` `/freshInvestigations` endpoint",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "CompanyDetails",
                "SearchCriteria"
              ]
            }
          },
          {
            "name": "companyDetailsCountry",
            "in": "query",
            "description": "Looks for your returned Fresh Investigations where the returned Company Country is named this. Use with lookUpOrderBy=CompanyDetails",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyDetailsName",
            "in": "query",
            "description": "Looks for your returned Fresh Investigations where the returned Company Name is named this. Use with lookUpOrderBy=CompanyDetails",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteriaCountry",
            "in": "query",
            "description": "Looks for your returned Fresh Investigations where your submitted Search Criteria Company Country is this. Use with lookUpOrderBy=searchCriteria",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteriaName",
            "in": "query",
            "description": "Looks for your Fresh Investigations where your submitted Search Criteria Company Name is this. Use with lookUpOrderBy=searchCriteria",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorts  returned Fresh Investigations by this field",
            "schema": {
              "type": "string",
              "enum": [
                "creationDate",
                "lastStatusChangeDate",
                "orderID",
                "status"
              ]
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "description": "Sorts returned Fresh Investigations by this direction",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ]
            }
          }
        ],
        "description": "Returns a list of your submitted Fresh Investigation Orders.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listFreshInvestigationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/freshInvestigations/{orderId}": {
      "get": {
        "tags": [
          "Fresh Investigations"
        ],
        "operationId": "Fresh Investigation Report",
        "description": "Returns a specific Fresh Investigation order.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sections",
            "in": "query",
            "description": "Specify a value to return a single section, or multiple-comma separated sections of the completed Fresh Investigation. Leave null to return the full report. Available sections; - companyIdentification - creditScore - contactInformation - directors - otherInformation - groupStructure - extendedGroupStructure - financialStatements - negativeInformation - additionalInformation - directorships - localFinancialStatements - paymentData - companySummary - alternateSummary",
            "schema": {
              "type": "string"
            },
            "example": "companyIdentification,creditScore"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific Fresh Investigation Order. For completed orders this will contain the Investigation content as Report Sections.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/completedFreshInvestigation"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Fresh Investigations"
        ],
        "operationId": "Delete Pending Fresh Invesitgation",
        "description": "Currently depreciated as the order may already be in progress with our investigation team. To delete an ongoing Fresh Investigation, please get in touch with us at Group.Help@creditsafe.com quoting the `Transaction Id` against the order in `/freshinvestigations/{orderId}`",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Delete request has been made successfully on FreshInvestigation OrderId :{orderId}"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Currently depreciated as the order may already be in progress with our investigation team. To edit an ongoing Fresh Investigation, please get in touch with us at Group.Help@creditsafe.com quoting the `Transaction Id` against the order in `/freshinvestigations/{orderId}`",
        "operationId": "Edit pending Fresh Investigation",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "FreshInvestigation OrderId: {orderId} is being updated"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/localSolutions/GB/bankmatch": {
      "get": {
        "tags": [
          "Local Solutions"
        ],
        "description": "The Bank Verification tool allows customers to instantly verify that small and medium sized companies you are working with are providing correct bank details, to reduce fraud and avoid delays in your on boarding process. The bank data for these companies is provided to Creditsafe by various financial providers, including major banks. When you provides us with a company number and their bank details, we are able to perform instant checks to verify that those bank details are associated with that company and return - </br> â€¢ Match â€“ We have bank information on the company, and the data provided by the customer matches this companyâ€™s records </br> â€¢ No Match â€“ We have bank information on the company, but the data provided does not match any of the companyâ€™s records </br> â€¢ Data Unavailable â€“ We do not have bank information on the company.",
        "operationId": "Bank Match",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "checkType",
            "in": "query",
            "description": "Validation uses an algorithm to determine if a SCAN or IBAN exists, but does not let you know if that SCAN or IBAN actually belongs to the company who has provided it. Verification takes this a step further and checks the Creditsafe database for a match on the SCAN/IBAN, and tells you if the bank details actually belong to the company, so you can be assured that you are sending your money to the correct entity.",
            "required": true,
            "schema": {
              "enum": [
                "Both",
                "Validate",
                "Verify"
              ]
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "The connectId or safeNumber of the company to check against.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "GB-0-X9999999"
          },
          {
            "name": "sortCode",
            "in": "query",
            "example": "089997",
            "description": "Sort Code to check - Must be passed in with Account Number to form a SCAN Result",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountNumber",
            "in": "query",
            "description": "Account Number to check - Must be passed in with Sort Code to form a SCAN Result",
            "schema": {
              "type": "string"
            },
            "example": 66374958
          },
          {
            "name": "iban",
            "in": "query",
            "description": "IBAN to check",
            "schema": {
              "type": "string"
            },
            "example": "GB55TEST08999966374957"
          },
          {
            "name": "vatNumber",
            "in": "query",
            "description": "VAT Number to check",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates the check has been made succesfully and contains the result of the Verification/Validation. A 200 response alone does not immediately indicate the bank account is valid, only that the check was made in the correct format. Check the SCAN text and IBAN text fields for the result of the Check.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/bankMatchValidate"
                    },
                    {
                      "$ref": "#/components/schemas/bankMatchVerify"
                    }
                  ]
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/user/details": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to return all user details relating to the Global Monitoring product.",
        "operationId": "Monitoring user details",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "An array object containing the user's details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/userDetails"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/companies/{id}/events": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to return a collection of `events` for the given company, optionally filtered on the supplied search criteria. Event information will only be returned if the company exists in at least one of your `portfolios`.",
        "operationId": "Company events",
        "parameters": [
          {
            "$ref": "#/components/parameters/startDate"
          },
          {
            "$ref": "#/components/parameters/endDate"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The connectId of the company that you wish to retrieve events for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/companyEventsResponse"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Event resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/eventRules": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all available notification event rules. Notification event rules allow you to control which events you wish to monitor for the `companies` contained within a given `portfolio`.",
        "operationId": "All eventRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventRulesResponse"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/eventRules/{countryCode}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all available notification event rules for the given `countryCode`. Notification event rules allow you to control which events you wish to monitor for the `companies` contained within a given `portfolio`.",
        "operationId": "Filtered eventRules",
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "ISO/Alpha 2 format country code for which notification event rules will be retured.",
            "required": true,
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventRulesResponse"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/notificationEvents": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all notification events generated for companies monitored in your portfolios, based on the notification rules enabled. The notification events returned will be filtered based upon the supplied search criteria.",
        "operationId": "Notification Events",
        "parameters": [
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/sortDir"
          },
          {
            "$ref": "#/components/parameters/startDate"
          },
          {
            "$ref": "#/components/parameters/endDate"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/notificationEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "NotificationEvent resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "x-amf-queryParameters": {
          "startDate": {
            "required": false,
            "type": "datetime | nil"
          },
          "endDate": {
            "required": false,
            "type": "datetime | nil"
          }
        }
      }
    },
    "/monitoring/portfolios": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to get all Portfolios based on the supplied Search Criteria.",
        "operationId": "List all portfolios",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return portfolios that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0).",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000).",
            "schema": {
              "type": "integer",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of matching records",
                "schema": {
                  "type": "integer"
                }
              },
              "Link": {
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "totalCount": 70,
                    "paging": {
                      "size": 100,
                      "last": 0
                    },
                    "data": {
                      "portfolios": [
                        {
                          "portfolioId": 20195,
                          "name": "Connect Portfolio",
                          "isDefault": true,
                          "isSharedPortfolio": 0
                        }
                      ],
                      "sharedPortfolios": []
                    }
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      },
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to create a new Portfolio based on the supplied criteria. A portfolio can contain any number of `companies` that you wish to monitor changes to.",
        "operationId": "Create monitoring portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean"
                  },
                  "emails": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      },
                      "emailAddress": {
                        "type": "string"
                      }
                    }
                  },
                  "emailSubject": {
                    "type": "string"
                  },
                  "emailLanguage": {
                    "type": "string"
                  },
                  "frequency": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "example": {
                "name": "My New Portfolio",
                "isDefault": "true"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "portfolioId": 20398,
                    "name": "My New Portfolio",
                    "isDefault": true
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get the portfolio with portfolioId",
        "operationId": "Retrieve portfolio by Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier for the portfolio that you wish to retrieve, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "example": {
                    "portfolioId": 123456789,
                    "name": "My new portfolio",
                    "isDefault": true
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      },
      "delete": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Delete the portfolio with portfolioId",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio that you wish to delete, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio removed"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\"message\": \"Portfolio not found\" }\n"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      },
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Update Portfolio details such as Name, email reciepients, language and subject line.",
        "operationId": "Update portfolio details",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "emails": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        },
                        "emailAddress": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "emailLanguage": {
                    "type": "string"
                  },
                  "emailSubject": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "New portofolio Name",
                  "emails": [
                    {
                      "firstName": "John",
                      "lastName": "Smith",
                      "emailAddress": "john.smith@creditsafe.com"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/countries": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get a list of distinct countries of companies monitored within a portfolio.",
        "operationId": "List countries of monitored companies",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "example": [
                    "FR",
                    "LU",
                    "DE",
                    "DK",
                    "SE"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/eventRules": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all notification `eventRules` for the given `portfolioId`. Notification event rules allow you to control which events you wish to monitor for the `companies` contained within the given `portfolio`.",
        "operationId": "List portfolio eventRules",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "description": "The unique identifier for the portfolio that you wish to retrieve notification event rules for, obtained from `/portfolios`.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of `eventRules` for the given `portfolioId`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/eventRulesResponse"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/eventRules/{countryCode}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all eventRules, optionally filtered by country code",
        "operationId": "Get filtered portfolio eventRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country code to show events for.",
            "required": true,
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of matching records",
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": [
                    {
                      "isActive": 0,
                      "ruleCode": 101,
                      "ruleCountryCode": "XX",
                      "ruleType": 4,
                      "ruleTypeName": "Rating band change - 3 input",
                      "name": "International Rating  |Reduce by {0} Band(s) OR Less than Band {1}",
                      "param0": "1",
                      "param1": "A"
                    }
                  ]
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      },
      "put": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Update eventRules for a portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country code to show events for",
            "required": true,
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ruleCode": {
                      "type": "string"
                    },
                    "isActive": {
                      "type": "string"
                    },
                    "param0": {
                      "type": "string"
                    },
                    "param1": {
                      "type": "string"
                    },
                    "param2...": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "ruleCode",
                    "isActive"
                  ],
                  "example": [
                    {
                      "ruleCode": 1801,
                      "isActive": 1,
                      "param0": "15"
                    },
                    {
                      "ruleCode": 1802,
                      "isActive": 1,
                      "param0": "10"
                    },
                    {
                      "ruleCode": 1815,
                      "isActive": 0
                    },
                    {
                      "ruleCode": 1803,
                      "isActive": 1
                    },
                    {
                      "ruleCode": 1804,
                      "isActive": 1
                    },
                    {
                      "ruleCode": 1814,
                      "isActive": 0
                    },
                    {
                      "ruleCode": 1805,
                      "isActive": 1
                    },
                    {
                      "ruleCode": 1806,
                      "isActive": 1
                    },
                    {
                      "ruleCode": 1807,
                      "isActive": 1
                    },
                    {
                      "ruleCode": 1808,
                      "isActive": 1
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/eventRules/setDefault": {
      "put": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Update a portofolios event rules to default state. In Connect, default state means all rules are turned off.",
        "operationId": "Reset portfolio eventRules to default values",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/import": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Import companies into a portfolio using .csv, .xls or .xlsx file. Additionally provide an email address to get notified when the import process is done.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "importCsv": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "importCsv"
                ],
                "example": {
                  "importCsv": "FILE_PATH",
                  "email": "john.smith@creditsafe.com"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Accepted for processing. Import Id 7744"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/sync": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Delete companies from portfolio and update new companies from CSV file",
        "operationId": "Sync portfolio companies to CSV records",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "importCsv": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "importCsv"
                ],
                "example": {
                  "importCsv": "FILE_PATH",
                  "email": "john.smith@creditsafe.com"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Accepted for processing. Import Id 7744"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/riskSummary": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get current portfolio risk summary information",
        "operationId": "Portoflio Risk Summary",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "totalCompanies": 479,
                    "bandACount": 269,
                    "bandApc": 56.158663883089766,
                    "bandBCount": 110,
                    "bandBpc": 22.964509394572026,
                    "bandCCount": 59,
                    "bandCpc": 12.31732776617954,
                    "bandDCount": 13,
                    "bandDpc": 2.7139874739039667,
                    "bandECount": 28,
                    "bandEpc": 5.845511482254697
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/notificationEvents": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all notificationEvents based on the portfolio id, optionally filter with query parameters",
        "operationId": "list notificationEvents in a portfolio filtered",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "required": true,
            "schema": {
              "type": "string",
              "default": "companyName",
              "enum": [
                "companyName",
                "countryCode",
                "eventId",
                "eventDate",
                "textValueEn"
              ]
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of matching records",
                "schema": {
                  "type": "integer"
                }
              },
              "Link": {
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "totalCount": 24,
                    "paging": {
                      "size": 2,
                      "prev": 1,
                      "next": 1,
                      "last": 11
                    },
                    "data": [
                      {
                        "company": {
                          "id": "ES-0-436776",
                          "safeNumber": "ES01481829",
                          "name": "BANK",
                          "countryCode": "ES",
                          "portfolioId": 18707,
                          "portfolioName": "Data"
                        },
                        "eventId": 46762582,
                        "eventDate": "",
                        "newValue": "33 new name",
                        "oldValue": "21name",
                        "createdDate": "",
                        "notificationEventId": 754983,
                        "ruleCode": 104,
                        "ruleName": "Company Name",
                        "ruleText": "Some text about the rule"
                      }
                    ]
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "NotificationEvent resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "x-amf-queryParameters": {
          "endDate": {
            "required": false,
            "type": "datetime | nil"
          },
          "startDate": {
            "required": false,
            "type": "datetime | nil"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/notificationEvents/{notificationEventId}": {
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Set a `true` or `false` flag on isProcessed for a given event",
        "operationId": "Update isProcessed flag on an notification event",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "notificationEventId",
            "in": "path",
            "required": true,
            "description": "A unique notification event ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isProcessed": {
                    "type": "boolean"
                  }
                },
                "example": {
                  "isProcessed": true
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "correlationId": "2b685810-ac93-11ea-b8ab-02c128ba7438",
                    "data": {
                      "message": "Update successful"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "NotificationEventId resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all companies from a specific portfolio based on the portfolio id, optionally filter with query parameters",
        "operationId": "List filtered companies in a portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return companies that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Return <<resourcePathName>> that match the given countryCode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "events",
            "in": "query",
            "description": "If set to true, all events will be returned for each company",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of matching records",
                "schema": {
                  "type": "integer"
                }
              },
              "Link": {
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "totalCount": 1,
                    "paging": {
                      "size": 100,
                      "next": 1,
                      "last": 4
                    },
                    "data": [
                      {
                        "id": "",
                        "safeNumber": "UK00216072",
                        "name": "ABU DHABI MARINE AREAS LIMITED",
                        "address": "CHERTSEY ROAD",
                        "countryCode": "GB",
                        "portfolioId": 17781,
                        "creditLimit": 1400000,
                        "dateLastEvent": "",
                        "personalLimit": "",
                        "personalReference": "",
                        "ratingCommon": "B",
                        "ratingLocal": "57",
                        "companyStatus": "1"
                      }
                    ]
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "x-amf-queryParameters": {
          "language": {
            "description": "Translation Locale language code optional",
            "required": false,
            "type": "string | nil"
          }
        }
      },
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Add new company to portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The company Safe Number or Connect ID"
                  },
                  "personalReference": {
                    "type": "string"
                  },
                  "freeText": {
                    "type": "string"
                  },
                  "personalLimit": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "example": {
                  "id": "GB-0-12345678",
                  "personalReference": "Some text",
                  "freeText": "Some useful test",
                  "personalLimit": "40"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company added"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "x-codegen-request-body-name": "generated"
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/copy": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Copy companies from one portfolio to single (or) multiple portfolios.",
        "operationId": "Copy companies from one to another portfolio(s)",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "copyAll",
            "in": "query",
            "description": "When CopyAll queryparameter is False, portfolios and companies list needs to be passed. When CopyAll queryparameter is True, only portfolios need to be passed and companies List must be empty. All companies are copied from current portfolio are considered here.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio you want to copy companies from, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "portfolios": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Comma separated portfolioId(s)"
                    }
                  },
                  "companies": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Company Safe Number or Connect ID. Not required when copyAll query parameter is set to true."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "copyAll=False query parameter": {
                    "portfolios": [
                      196854,
                      197369
                    ],
                    "companies": [
                      {
                        "id": "BE-X-733313367"
                      },
                      {
                        "id": "BE-X-868222848"
                      },
                      {
                        "id": "BE-X-835695382"
                      }
                    ]
                  },
                  "copyAll=True query parameter": {
                    "portfolios": [
                      196854,
                      197369
                    ],
                    "companies": []
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "totalPortfoliosCompanies": 10,
                    "successfulPortfoliosCompanies": 8,
                    "failedPortfoliosCompanies": 2,
                    "reason": "Duplicate entry '199483-FR00002855' for key 'PRIMARY'"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolios not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/remove": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Move companies from one portfolio to single (or) multiple portfolios.",
        "operationId": "Move companies from one to another portfolio(s)",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "removeAll",
            "in": "query",
            "description": "When RemoveAll queryparameter is False, portfolios and companies List needs to be passed. When RemoveAll queryparameter is True, only portfolios need to be passed and companies List must be empty. All companies are moved and deleted from current portfolio",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio you want to move companies from, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "portfolios": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Comma separated portfolioId(s)"
                    }
                  },
                  "companies": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Company Safe Number or Connect ID. Not required when removeAll query parameter is set to true."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "removeAll=False query parameter": {
                    "portfolios": [
                      196854,
                      197369
                    ],
                    "companies": [
                      {
                        "id": "BE-X-733313367"
                      },
                      {
                        "id": "BE-X-868222848"
                      },
                      {
                        "id": "BE-X-835695382"
                      }
                    ]
                  },
                  "removeAll=True query parameter": {
                    "portfolios": [
                      196854,
                      197369
                    ],
                    "companies": []
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "totalPortfoliosCompanies": 10,
                    "successfulPortfoliosCompanies": 8,
                    "failedPortfoliosCompanies": 2,
                    "reason": "Duplicate entry '199483-FR00002855' for key 'PRIMARY'"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolios not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/clear": {
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Delete companies from current portfolio",
        "operationId": "Clear companies from a portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "clearAll",
            "in": "query",
            "description": "When ClearAll queryparameter is False,Companies List needs to be passed. When ClearAll queryparameter is True, Companies List must be empty. All companies will be deleted",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio you want to delete companies from, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "companies": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Company Safe Number or Connect ID. Not required when removeAll query parameter is set to true."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "clearAll=False query parameter": {
                    "companies": [
                      "BE-X-733313367",
                      "BE-X-868222848"
                    ]
                  },
                  "clearAll=True query parameter": {
                    "companies": []
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Companies deleted from portfolio"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolios not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "x-codegen-request-body-name": "generated"
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/{id}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "operationId": "Get a monitored company from a portfolio",
        "description": "Get a company from a portofolio using a company id",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  },
                  "example": {
                    "portfolioId": 23585848,
                    "safeNumber": "FR123456789",
                    "countryCode": "FR",
                    "name": "A Company",
                    "address": "24 Leftside, Paris, 23456",
                    "personalReference": "Some text",
                    "companyStatus": "Active",
                    "creditLimit": 10000,
                    "ratingLocal": 76,
                    "ratingCommon": "B",
                    "dateLastEvent": "2017-04-18T15:00:00.050Z",
                    "id": "FR01-000-584758989"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      },
      "delete": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Delete a Company",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "messageId": "f7759260-ab12-11ea-8982-02443ac4bd52",
                    "userId": 18275,
                    "csUserId": 2425534,
                    "processingMs": 70,
                    "data": {
                      "message": "Company deleted successfully from the portfolio."
                    }
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\"message\": \"Company not found\" }\n"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      },
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Updates the company details in a specified portfolio",
        "operationId": "Update company details in a portfolio",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personalReference": {
                    "type": "string"
                  },
                  "freeText": {
                    "type": "string"
                  },
                  "personalLimit": {
                    "type": "string"
                  }
                },
                "required": [
                  "personalReference",
                  "freeText",
                  "personalLimit"
                ],
                "example": {
                  "personalReference": "personal reference",
                  "freeText": "Some useful text",
                  "personalLimit": "40"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "",
            "content": {}
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/{id}/notificationEvents": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "operationId": "List company specific notificationEvents",
        "description": "List of notification events based on the company id,optionally filtered with query parameters",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "isProcessed",
            "in": "query",
            "description": "A flag that can be set to `true` boolean value to mark it as an event that has beebn actioned.",
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "schema": {
              "type": "string",
              "default": "companyName",
              "enum": [
                "companyName",
                "countryCode",
                "eventId",
                "eventDate"
              ]
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "description": "Total number of matching records",
                "schema": {
                  "type": "integer"
                }
              },
              "Link": {
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)",
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "corellationId": "6b9acf70-ac8f-11ea-ad08-063b23bc4bc6",
                    "totalCount": 24,
                    "data": [
                      {
                        "company": {
                          "id": "ES-0-436776",
                          "safeNumber": "ES01481829",
                          "name": "BANK",
                          "countryCode": "ES",
                          "portfolioId": 18707,
                          "portfolioName": "Data"
                        },
                        "eventId": 46762582,
                        "eventDate": "",
                        "newValue": "33 new name",
                        "oldValue": "21name",
                        "createdDate": "",
                        "notificationEventId": 754983,
                        "noitificationId": null,
                        "processedDate": null,
                        "ruleCode": 104,
                        "ruleName": "Company Name",
                        "summary": null,
                        "ruleText": "Some text about the rule",
                        "localEventCode": "CL",
                        "isProcessed": false
                      }
                    ]
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "NotificationEvent resource not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "x-amf-queryParameters": {
          "endDate": {
            "required": false,
            "type": "datetime | nil"
          },
          "startDate": {
            "required": false,
            "type": "datetime | nil"
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/sharingPermissions": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "operationId": "Portfolio user permissions",
        "description": "Retrieve user permissions within the customer for a portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "data": {
                      "portfolioId": "19425",
                      "customerId": 1000029220,
                      "userPermissions": [
                        {
                          "csUserId": 1000029225,
                          "permissions": "View,Add"
                        },
                        {
                          "csUserId": 1000029570,
                          "permissions": "View,Add"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolios not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      },
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Update/Create user permissions within the customer for portfolio",
        "operationId": "Share portfolio Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "revokeAll": {
                    "type": "string",
                    "description": "If set to \"true\", all user permissions will be revoked for the portfolio. By default set to \"false\"."
                  },
                  "companies": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "csUserId": {
                          "type": "string",
                          "description": "A creditsafe user id."
                        },
                        "permissions": {
                          "type": "string",
                          "description": "Comma separated permissions. \"View\" permission gets automatically added to the user if \"Add\", \"Edit\", \"Remove\" permissions are set."
                        }
                      }
                    }
                  }
                },
                "example": {
                  "revokeAll": "false",
                  "userPermissions": [
                    {
                      "csUserId": 101106166,
                      "permissions": "View,Add"
                    },
                    {
                      "csUserId": 1000027380,
                      "permissions": "View,Add,Edit,Remove"
                    }
                  ]
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "data": {
                      "portfolioId": "19425",
                      "customerId": 1000029220,
                      "status": "Success"
                    }
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolios not found"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/decisionEngine/GUID": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "List available decision trees available.",
        "operationId": "List Decision Trees",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter the list of available decision trees by the provided tree type.",
            "schema": {
              "type": "string",
              "enum": [
                "Demo",
                "Credit Approval",
                "Bank Validation",
                "Bespoke"
              ]
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "schema": {
              "type": "string",
              "default": "friendlyName",
              "enum": [
                "friendlyName"
              ]
            }
          },
          {
            "name": "sortDir",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "asc",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/guidSuccessResponse"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found."
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/decisionEngine/{provenirId}": {
      "post": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Calls a Decision Tree with the provided parameters to return a Decision.",
        "operationId": "Run Decision Tree",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "the connectId of the company to be evaluated in the  deicison tree.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "originationId",
            "in": "query",
            "description": "the origin id of the company we want a decision on. Only up to 100 characters are allowed, the rest will be truncated.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provenirId",
            "in": "path",
            "description": "Decision Tree GUID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "accountId": "123456",
                  "companyName": "Test Company",
                  "contact": "Joe Bloggs"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "Decision": "Cred Lim D",
                    "Audits": [
                      {
                        "description": "BANK OF AMERICA CORPORATION",
                        "RuleName": "Company Name"
                      },
                      {
                        "description": "87.0",
                        "RuleName": "Credit Rating"
                      }
                    ],
                    "originationId": "123456_@"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "x-codegen-request-body-name": "generated"
      }
    },
    "/compliancetemp/companies/searchCriteria": {
      "get": {
        "tags": [
          "Compliance Beta"
        ],
        "operationId": "Company Compliance Search Criteria",
        "description": "Returns the search parameters available to use when making a compliance search request against any Company `predefined Search`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "criteriaSets": [
                      {
                        "name": {
                          "required": true
                        },
                        "address": {
                          "street": {
                            "required": false
                          },
                          "houseNumber": {
                            "required": false
                          },
                          "city": {
                            "required": false
                          },
                          "postCode": {
                            "required": false
                          },
                          "province": {
                            "required": false
                          }
                        },
                        "phoneNo": {
                          "required": false
                        },
                        "predefinedSearchName": {
                          "required": false
                        },
                        "countries": {
                          "required": false
                        }
                      }
                    ]
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/compliancetemp/companies/predefinedSearches": {
      "get": {
        "tags": [
          "Compliance Beta"
        ],
        "description": "This endpoint returns the list of all available company `predefined Search` types. A `predefined Search` is defined by the compliance watchlist to be be screened, the confidence in matches returned by your search and the entity type (company or person). They are set at 5% increments between 75-100% match confidence. For example - Searching against the `predefined Search` `c-Sanct-95` will look to match your search criteria against the Company Sanctions watchlist and return anything with 95% match confidence.",
        "operationId": "List of Company Pre-Defined Searches",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/compliancePreDefinedSearches"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/compliancetemp/companies/{predefinedSearch}": {
      "get": {
        "tags": [
          "Compliance Beta"
        ],
        "description": "Searches the provided `Predefined search` list with your search criteria. Results returned here indicate potential matches (depending on the predefined Search used).",
        "operationId": "Company Compliance Search",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "countries",
            "in": "query",
            "example": "GB",
            "description": "A Comma-separated list of country codes to search for Companies in. The list takes ISO/Alpha 2 format country codes. For example US,GB represents searching for Companies in the United States and Great Britain.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "predefinedSearch",
            "in": "path",
            "required": true,
            "description": "the predefined search that the search will be made against. See the `/predefinedSearches` endpoint",
            "schema": {
              "type": "string",
              "enum": [
                "c-100-fullFile",
                "c-95-fullFile",
                "c-90-fullFile",
                "c-85-fullFile",
                "c-80-fullFile",
                "c-75-fullFile",
                "c-100-Sanct",
                "c-95-Sanct",
                "c-90-Sanct",
                "c-85-Sanct",
                "c-80-Sanct",
                "c-75-Sanct"
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Entity Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "street",
            "in": "query",
            "description": "Address part identifier - Street of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseNo",
            "in": "query",
            "description": "Address part identifier - House/Building Number of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address part identifier - City of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postCode",
            "in": "query",
            "description": "Address part identifier - Postcode/Zip Code of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "province",
            "in": "query",
            "description": "Address part identifier - Province/State of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNo",
            "in": "query",
            "description": "Phone Number of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/complianceSearchResult"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/compliancetemp/people/searchCriteria": {
      "get": {
        "tags": [
          "Compliance Beta"
        ],
        "operationId": "Individuals Compliance Search Criteria",
        "description": "Returns the search parameters available to use when making a compliance search request against any Individual/Person `predefined Search`.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "criteriaSets": [
                      {
                        "name": {
                          "required": true
                        },
                        "address": {
                          "street": {
                            "required": false
                          },
                          "houseNumber": {
                            "required": false
                          },
                          "city": {
                            "required": false
                          },
                          "postCode": {
                            "required": false
                          },
                          "province": {
                            "required": false
                          }
                        },
                        "phoneNo": {
                          "required": false
                        },
                        "predefinedSearchName": {
                          "required": false
                        },
                        "countries": {
                          "required": false
                        }
                      }
                    ]
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    },
    "/compliancetemp/people/predefinedSearches": {
      "get": {
        "tags": [
          "Compliance Beta"
        ],
        "description": "This endpoint returns the list of all available company `predefined Search` types. A `predefined Search` is defined by the compliance watchlist to be be screened, the confidence in matches returned by your search and the entity type (company or person). They are set at 5% increments between 75-100% match confidence. For example - Searching against the `predefined Search` `p-Sanct-95` will look to match your search criteria against the Individuals/Person Sanctions watchlist and return anything with 95% match confidence.",
        "operationId": "List of Individuals Pre-Defined Searches",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/compliancePreDefinedSearches"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/compliancetemp/people/{predefinedSearch}": {
      "get": {
        "tags": [
          "Compliance Beta"
        ],
        "description": "Searches the provided `Predefined search` list with your search criteria. Results returned here indicate potential matches (depending on the predefined Search used).",
        "operationId": "Individual/Person Compliance Search",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "countries",
            "in": "query",
            "example": "GB",
            "description": "A Comma-separated list of country codes to search for Individuals in. The list takes ISO/Alpha 2 format country codes. For example US,GB represents searching for Companies in the United States and Great Britain.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "predefinedSearch",
            "in": "path",
            "required": true,
            "description": "the predefined search that the search will be made against. See the `/predefinedSearches` endpoint",
            "schema": {
              "type": "string",
              "enum": [
                "p-100-fullFile",
                "p-95-fullFile",
                "p-90-fullFile",
                "p-85-fullFile",
                "p-80-fullFile",
                "p-75-fullFile",
                "p-100-Sanct",
                "p-95-Sanct",
                "p-90-Sanct",
                "p-85-Sanct",
                "p-80-Sanct",
                "p-75-Sanct"
              ]
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Entity Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "street",
            "in": "query",
            "description": "Address part identifier - Street of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "houseNo",
            "in": "query",
            "description": "Address part identifier - House/Building Number of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address part identifier - City of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "postCode",
            "in": "query",
            "description": "Address part identifier - Postcode/Zip Code of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "province",
            "in": "query",
            "description": "Address part identifier - Province/State of the entity.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "phoneNo",
            "in": "query",
            "description": "Phone Number of the entity.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/complianceSearchResult"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/reportcustomdata/{country}": {
      "get": {
        "tags": [
          "Local Solutions"
        ],
        "description": "Endpoint to return mandatory parameters or metadata associated with specific country Company Report requests. To add a custom data parameter, add a Parameter with the key=value pair in the format customData=key::allowedValue I.e. Suppling `DE` as a country code will return a list of reasons for requesting a DE Credit Report (which is a legal requirement to supply with each Credit Report request in Germany). This will provide a list of allowedValues to enter into the mandatory Parameter `customData` = `de_reason_code::allowedValue`",
        "operationId": "Custom Report Parameters",
        "parameters": [
          {
            "$ref": "#/components/parameters/authHeader"
          },
          {
            "name": "template",
            "in": "query",
            "description": "Report template (currently unncessary to provide.)",
            "schema": {
              "type": "string",
              "default": "full"
            }
          },
          {
            "name": "country",
            "in": "path",
            "description": "An ISO/Alpha-2 country code to display any special mandatory parameters when ordering a Credit Report in that territory.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "customData": [
                      {
                        "key": "de_reason_code",
                        "optional": false,
                        "allowedValues": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7",
                          "8"
                        ],
                        "description": "DE report retrieval reason code:\n1 - Credit Decisioning\n2 - Credit Assessment - Future business connection (with credit risk)\n3 - Credit Assessment - Existing business connection (with credit risk)\n4 - Realisation check receivables collection\n5 - Purchase Contract - Intention of signature of purchase contract (with credit risk)\n6 - Goods Credit Insurance (with credit risk)\n7 - Contract - Intention of signature of leasing or rent contract (with credit risk)\n8 - Insurance Contract - Intention of signature of a insurance contract (with credit risk)"
                      }
                    ],
                    "country": "DE"
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/responses/AccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Resource not found "
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "authHeader": {
        "name": "Authorization",
        "in": "header",
        "description": "Bearer JWT (Authentication Token) generated from the /authenticate endpoint.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "startDate": {
        "name": "startDate",
        "in": "query",
        "description": "The start date on which results are filtered.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "endDate": {
        "name": "endDate",
        "in": "query",
        "description": "The end date on which results are filtered.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "Starting page number (indexed from 0)",
        "schema": {
          "type": "integer",
          "default": 0
        }
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "Number of items to return per Page (max 1000)",
        "schema": {
          "type": "integer",
          "default": 50
        }
      },
      "sortBy": {
        "name": "sortBy",
        "in": "query",
        "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
        "schema": {
          "type": "string",
          "default": "companyName",
          "enum": [
            "companyName",
            "countryCode",
            "eventId",
            "eventDate"
          ]
        }
      },
      "sortDir": {
        "name": "sortDir",
        "in": "query",
        "description": "The direction that you wish to sort results by.",
        "schema": {
          "type": "string",
          "default": "asc",
          "enum": [
            "asc",
            "desc"
          ]
        }
      }
    },
    "requestBodies": {
      "PortfolioRequest": {
        "description": "A JSON object containing portfolio information.",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/portfolioRequest"
            }
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad Request - specific error information is provided in the `details` field. </br> Most common causes of this response are incorrect, missing or unexpected parameters in the request e.g. missing the `Authorization Header`, invalid search criteria or providing an invalid `connectId` for a report).",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/badRequestError"
            },
            "example": {
              "details": "errorMessage",
              "correlationId": "16571f00-9b87-11ea-b218-02e1743911de",
              "message": "Bad Request"
            }
          }
        }
      },
      "InvalidToken": {
        "description": "",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/invalidTokenError"
            },
            "example": {
              "error": "Invalid Token"
            }
          }
        }
      },
      "AccessForbidden": {
        "description": "This error is returned when your user account does have access to the requested service, or because the service has expired, or has reached its full usage limit. Check `/Access/Countries for a full list of your services.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "example": {
                "correlationId": "{correlationId}",
                "details": "No access to {service}",
                "message": "Forbidden"
              }
            }
          }
        },
        "x-amf-mediaType": "application/json"
      }
    },
    "schemas": {
      "authenticationRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "example": {
          "username": "username@domain.com",
          "password": "dfjsdfdn_23oqf235;fsa"
        }
      },
      "authenticationSuccessResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication Token"
          }
        },
        "example": {
          "token": "eyJraWQiOiJEbUZkQXVITDNKS1hMZFpBcXdTREx2S01tOE5qeE1lXC94eDg3a0Y1ZDR3VT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Mjk1ZDIwOC1jZjlkLTRhMzYtYjcxMi0yN2VmODQzYWEzZTUiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLmV1LXdlc3QtMS5hbWF6b25hd3MuY29tXC9ldS13ZXN0LTFfcUNmOURsUVhmIiwiY29nbml0bzp1c2VybmFtZSI6ImNvbm5lY3R1c2VyMzhAbWFpbGluYXRvci5jb20iLCJjdXN0b206Y3NVc2VySWQiOiIxMDAwMDE3Mzc4IiwiYXVkIjoiNXY1ZXJjaHJhdHRiMnFlZDQ2dDJ2OGJ0ZmUiLCJjdXN0b206Y3NVc2VyQ291bnRyeUNvZGUiOiJHQiIsImV2ZW50X2lkIjoiZjY5NTA4NTctMDUwOC0xMWU5LWIxYTYtMjM5ZmMxZWMwMzBlIiwidG9rZW5fdXNlIjoiaWQiLCJjdXN0b206Y3NVc2VyTGFuZ3VhZ2VDb2RlIjoiZW4iLCJhdXRoX3RpbWUiOjE1NDUzODcxNjYsImV4cCI6MTU0NTM5MDc2NiwiaWF0IjoxNTQ1Mzg3MTY2LCJlbWFpbCI6ImNvbm5lY3R1c2VyMzhAbWFpbGluYXRvci5jb20ifQ.YhD6Nr2798pe8Ct1djygKtR7pibzzeHGgWpnduaaKMf468cJyEPH_A7qpcGWDeur0NuYUQvNCAbmtSj_uQWkajOgjwJE3Mt0URVsDDvtdYt3ggRZl6-mByQAcP50HDUxH0SGNLnUeYhAkVbZqoc4PQme-WXwBsGAg2x_kWKRsicfmVfnXE67BDZ06mceC1WpPA72Kg6O-AWcPe5yIC3JpV2N1HWjuPym2fZGv13Rl1gCWSO0NACE069zT6pqePbBr5QWddf-GE6AI0lISmLyF_mTC0NYpGL_k5nl6H-K2mi6e-QcCcfz8eIQHGDFi_icPCXMAtS2WV5lTFw20loQdw"
        }
      },
      "companySearchSuccessResult": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "number"
          },
          "companies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "regNo": {
                  "type": "string"
                },
                "vatNo": {
                  "type": "object",
                  "properties": {}
                },
                "safeNo": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "officeType": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "statusDescription": {
                  "type": "string"
                },
                "activityCode": {
                  "type": "string"
                },
                "tradingNames": {
                  "type": "object",
                  "properties": {}
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "simpleValue": {
                      "type": "string"
                    },
                    "street": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "postCode": {
                      "type": "string"
                    },
                    "province": {
                      "type": "string"
                    }
                  }
                },
                "dateOfLatestChange": {
                  "type": "object",
                  "properties": {}
                },
                "dateOfLatestCAccounts": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "example": {
          "totalSize": 10780,
          "companies": [
            {
              "id": "GB001-1-3031798",
              "country": "GB",
              "safeNo": "UK10731246",
              "name": "BANKS",
              "address": {
                "simpleValue": "KIMBOLTON ROAD, BOLNHURST, BEDFORD, BEDFORDSHIRE, MK44 2ES",
                "street": "BOLNHURST",
                "city": "BEDFORD",
                "postalCode": "MK44 2ES"
              },
              "status": "Active",
              "type": "NonLtd",
              "dateOfLatestChange": "2009-03-31T23:00:00.000Z"
            },
            {
              "id": "GB001-0-04348058",
              "country": "GB",
              "regNo": 4348058,
              "safeNo": "UK03996906",
              "name": "BANK LTD",
              "address": {
                "simpleValue": "HESKETH HOUSE 43-45 PORTMAN SQUARE, 43-45 PORTMAN SQUARE, LONDON, Greater London, W1H 6HN",
                "street": "43-45 PORTMAN SQUARE",
                "city": "LONDON",
                "postalCode": "W1H 6HN"
              },
              "status": "Active",
              "type": "Ltd",
              "dateOfLatestAccounts": "2016-01-31T00:00:00.000Z",
              "dateOfLatestChange": "2018-07-04T15:43:14.000Z",
              "activityCode": "9999"
            }
          ]
        }
      },
      "searchNoResultsError": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "number"
          },
          "companies": {
            "type": "object"
          },
          "messages": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "text": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          }
        },
        "example": {
          "companies": [],
          "totalSize": 0,
          "messages": [
            {
              "code": "NoResults"
            },
            {
              "text": "No companies matching specified search criteria found."
            },
            {
              "type": "Information"
            }
          ]
        }
      },
      "badRequestError": {
        "type": "object",
        "description": "",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string",
            "description": "Provides further information on why the request was rejected"
          }
        }
      },
      "invalidTokenError": {
        "type": "object",
        "description": "Authorization Token has either expired or is not a valid Connect Authorization Token",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "peopleSearchSuccessResult": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer"
          },
          "directors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "peopleId": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "company": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "companyNumber": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "regNo": {
                      "type": "string"
                    }
                  }
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "simpleValue": {
                      "type": "string"
                    },
                    "houseNo": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "postCode": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "string"
                },
                "dateOfLatestChange": {
                  "type": "string"
                },
                "dateOfBirth": {
                  "type": "string"
                },
                "localDirectorNumber": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "totalSize": 1,
          "directors": {
            "peopleId": "GB-913399851",
            "firstName": "Matthew James",
            "lastName": "Debbage",
            "country": "GB",
            "status": "current",
            "dateOfLatestChange": "2019-10-10T00:51:27.000Z",
            "dateOfBirth": "1972-11-18T00:00:00.000Z",
            "localDirectorNumber": "UK913399851"
          }
        }
      },
      "gbPeopleReportReponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "orderId": {
            "type": "string"
          },
          "directorId": {
            "type": "string"
          },
          "dateOfOrder": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "report": {
            "type": "object",
            "properties": {
              "directorId": {
                "type": "string"
              },
              "directorSummary": {
                "type": "object",
                "properties": {
                  "currentAppointments": {
                    "type": "integer"
                  },
                  "inactiveAppointments": {
                    "type": "integer"
                  },
                  "previousAppointments": {
                    "type": "integer"
                  }
                }
              },
              "directorDetails": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "idType": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "middleName": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "address": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "simpleValue": {
                        "type": "string"
                      },
                      "street": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      }
                    }
                  },
                  "gender": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "directorType": {
                    "type": "string"
                  },
                  "positions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dateAppointed": {
                          "type": "string"
                        },
                        "positionName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalData": {
                    "type": "object",
                    "properties": {
                      "disqualified": {
                        "type": "boolean"
                      },
                      "disqualifiedException": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              },
              "otherAddresses": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "simpleValue": {
                      "type": "string"
                    },
                    "street": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "postalCode": {
                      "type": "string"
                    },
                    "province": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                }
              },
              "directorships": {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "companyName": {
                          "type": "string"
                        },
                        "companyNumber": {
                          "type": "string"
                        },
                        "companyRegistrationNumber": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "position": {
                          "type": "object",
                          "properties": {
                            "dateAppointed": {
                              "type": "string"
                            },
                            "positionName": {
                              "type": "string"
                            }
                          }
                        },
                        "companyRegistrationDate": {
                          "type": "string"
                        },
                        "legalCount": {
                          "type": "integer"
                        },
                        "creditScore": {
                          "type": "object",
                          "properties": {
                            "currentCreditRating": {
                              "type": "object",
                              "properties": {
                                "commonValue": {
                                  "type": "string"
                                },
                                "commonDescription": {
                                  "type": "string"
                                },
                                "creditLimit": {
                                  "type": "object",
                                  "properties": {
                                    "currency": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "providerValue": {
                                  "type": "object",
                                  "properties": {
                                    "maxValue": {
                                      "type": "string"
                                    },
                                    "minValue": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additionalData": {
                          "type": "object",
                          "properties": {
                            "occupation": {
                              "type": "string"
                            },
                            "statusDescription": {
                              "type": "string"
                            },
                            "gearing": {
                              "type": "number"
                            }
                          }
                        },
                        "latestTurnoverFigure": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        },
                        "netWorth": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        },
                        "legalAmount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  },
                  "inactive": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "companyName": {
                          "type": "string"
                        },
                        "companyNumber": {
                          "type": "string"
                        },
                        "companyRegistrationNumber": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "position": {
                          "type": "object",
                          "properties": {
                            "resignationDate": {
                              "type": "string"
                            },
                            "dateAppointed": {
                              "type": "string"
                            },
                            "positionName": {
                              "type": "string"
                            }
                          }
                        },
                        "companyRegistrationDate": {
                          "type": "string"
                        },
                        "netWorth": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        },
                        "legalCount": {
                          "type": "integer"
                        },
                        "creditScore": {
                          "type": "object",
                          "properties": {
                            "currentCreditRating": {
                              "type": "object",
                              "properties": {
                                "commonValue": {
                                  "type": "string"
                                },
                                "commonDescription": {
                                  "type": "string"
                                },
                                "creditLimit": {
                                  "type": "object",
                                  "properties": {
                                    "currency": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "providerValue": {
                                  "type": "object",
                                  "properties": {
                                    "maxValue": {
                                      "type": "string"
                                    },
                                    "minValue": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additionalData": {
                          "type": "object",
                          "properties": {
                            "occupation": {
                              "type": "string"
                            },
                            "statusDescription": {
                              "type": "string"
                            },
                            "gearing": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  },
                  "previous": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "companyName": {
                          "type": "string"
                        },
                        "companyRegistrationNumber": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "position": {
                          "type": "object",
                          "properties": {
                            "resignationDate": {
                              "type": "string"
                            },
                            "dateAppointed": {
                              "type": "string"
                            },
                            "positionName": {
                              "type": "string"
                            }
                          }
                        },
                        "companyRegistrationDate": {
                          "type": "string"
                        },
                        "latestTurnoverFigure": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        },
                        "netWorth": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        },
                        "legalCount": {
                          "type": "integer"
                        },
                        "creditScore": {
                          "type": "object",
                          "properties": {
                            "currentCreditRating": {
                              "type": "object",
                              "properties": {
                                "commonValue": {
                                  "type": "string"
                                },
                                "commonDescription": {
                                  "type": "string"
                                },
                                "creditLimit": {
                                  "type": "object",
                                  "properties": {
                                    "currency": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "providerValue": {
                                  "type": "object",
                                  "properties": {
                                    "maxValue": {
                                      "type": "string"
                                    },
                                    "minValue": {
                                      "type": "string"
                                    },
                                    "value": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "additionalData": {
                          "type": "object",
                          "properties": {
                            "occupation": {
                              "type": "string"
                            },
                            "statusDescription": {
                              "type": "string"
                            },
                            "gearing": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "gbImageTypesResponse": {
        "type": "object",
        "properties": {
          "country": {
            "type": "string"
          },
          "availableTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "imageType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "availableFormats": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "listCompanyImages": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "imageId": {
                  "type": "string"
                },
                "company": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "localId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "document": {
                  "type": "object",
                  "properties": {
                    "imageType": {
                      "type": "string"
                    },
                    "imageCode": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "format": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "filingDate": {
                  "type": "string"
                },
                "uploadDate": {
                  "type": "string"
                },
                "accountingDate": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "comments": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "localProperties": {
                  "type": "object",
                  "properties": {
                    "accountRefNumber": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "gbCompanyReportExampleResponse": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "companyId": {
            "type": "string"
          },
          "dateOfOrder": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "report": {
            "type": "object",
            "properties": {
              "companyId": {
                "type": "string"
              },
              "language": {
                "type": "string"
              },
              "companySummary": {
                "type": "object",
                "properties": {
                  "businessName": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "companyNumber": {
                    "type": "string"
                  },
                  "companyRegistrationNumber": {
                    "type": "string"
                  },
                  "mainActivity": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "classification": {
                        "type": "string"
                      }
                    }
                  },
                  "companyStatus": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  },
                  "latestTurnoverFigure": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  },
                  "latestShareholdersEquityFigure": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  },
                  "creditRating": {
                    "type": "object",
                    "properties": {
                      "commonValue": {
                        "type": "string"
                      },
                      "commonDescription": {
                        "type": "string"
                      },
                      "creditLimit": {
                        "required": [
                          "currency",
                          "value"
                        ],
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "providerValue": {
                        "type": "object",
                        "properties": {
                          "maxValue": {
                            "type": "string"
                          },
                          "minValue": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "providerDescription": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "companyIdentification": {
                "type": "object",
                "properties": {
                  "basicInformation": {
                    "type": "object",
                    "properties": {
                      "businessName": {
                        "type": "string"
                      },
                      "registeredCompanyName": {
                        "type": "string"
                      },
                      "companyRegistrationNumber": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      },
                      "companyRegistrationDate": {
                        "type": "string"
                      },
                      "legalForm": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          }
                        }
                      },
                      "companyStatus": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          }
                        }
                      },
                      "principalActivity": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "classification": {
                            "type": "string"
                          }
                        }
                      },
                      "contactAddress": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string"
                          },
                          "simpleValue": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "activityClassifications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "classification": {
                          "type": "string"
                        },
                        "activities": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "previousNames": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "dateChanged": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "creditScore": {
                "type": "object",
                "properties": {
                  "currentCreditRating": {
                    "type": "object",
                    "properties": {
                      "commonValue": {
                        "type": "string"
                      },
                      "commonDescription": {
                        "type": "string"
                      },
                      "creditLimit": {
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "providerValue": {
                        "type": "object",
                        "properties": {
                          "maxValue": {
                            "type": "string"
                          },
                          "minValue": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "providerDescription": {
                        "type": "string"
                      }
                    }
                  },
                  "currentContractLimit": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  },
                  "previousCreditRating": {
                    "type": "object",
                    "properties": {
                      "commonValue": {
                        "type": "string"
                      },
                      "commonDescription": {
                        "type": "string"
                      },
                      "creditLimit": {
                        "type": "object",
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "providerValue": {
                        "type": "object",
                        "properties": {
                          "maxValue": {
                            "type": "string"
                          },
                          "minValue": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "providerDescription": {
                        "type": "string"
                      }
                    }
                  },
                  "latestRatingChangeDate": {
                    "type": "string"
                  }
                }
              },
              "contactInformation": {
                "type": "object",
                "properties": {
                  "mainAddress": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "simpleValue": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      }
                    }
                  },
                  "otherAddresses": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "simpleValue": {
                          "type": "string"
                        },
                        "postalCode": {
                          "type": "string"
                        },
                        "telephone": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "websites": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "shareCapitalStructure": {
                "type": "object",
                "properties": {
                  "issuedShareCapital": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string"
                      },
                      "value": {
                        "type": "number"
                      }
                    }
                  },
                  "numberOfSharesIssued": {
                    "type": "number"
                  },
                  "shareHolders": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "shareholderType": {
                          "type": "string"
                        },
                        "shareType": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        },
                        "totalNumberOfSharesOwned": {
                          "type": "number"
                        },
                        "percentSharesHeld": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "directors": {
                "type": "object",
                "properties": {
                  "currentDirectors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "firstName": {
                          "type": "string"
                        },
                        "surname": {
                          "type": "string"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "simpleValue": {
                              "type": "string"
                            },
                            "postalCode": {
                              "type": "string"
                            }
                          }
                        },
                        "gender": {
                          "type": "string"
                        },
                        "dateOfBirth": {
                          "type": "string"
                        },
                        "directorType": {
                          "type": "string"
                        },
                        "positions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dateAppointed": {
                                "type": "string"
                              },
                              "positionName": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "previousDirectors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "gender": {
                          "type": "string"
                        },
                        "directorType": {
                          "type": "string"
                        },
                        "positions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "otherInformation": {
                "type": "object",
                "properties": {
                  "advisors": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "auditorName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "employeesInformation": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "year": {
                          "type": "number"
                        },
                        "numberOfEmployees": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "groupStructure": {
                "type": "object",
                "properties": {
                  "subsidiaryCompanies": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "country": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "safeNumber": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "registrationNumber": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "extendedGroupStructure": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "safeNumber": {
                      "type": "string"
                    },
                    "companyName": {
                      "type": "string"
                    },
                    "registeredNumber": {
                      "type": "string"
                    },
                    "latestAnnualAccounts": {
                      "type": "string"
                    },
                    "level": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              },
              "financialStatements": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "yearEndDate": {
                      "type": "string"
                    },
                    "numberOfWeeks": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "consolidatedAccounts": {
                      "type": "boolean"
                    },
                    "profitAndLoss": {
                      "type": "object",
                      "properties": {
                        "revenue": {
                          "type": "number"
                        },
                        "operatingCosts": {
                          "type": "number"
                        },
                        "operatingProfit": {
                          "type": "number"
                        },
                        "wagesAndSalaries": {
                          "type": "number"
                        },
                        "pensionCosts": {
                          "type": "number"
                        },
                        "depreciation": {
                          "type": "number"
                        },
                        "amortisation": {
                          "type": "number"
                        },
                        "financialExpenses": {
                          "type": "number"
                        },
                        "profitBeforeTax": {
                          "type": "number"
                        },
                        "tax": {
                          "type": "number"
                        },
                        "profitAfterTax": {
                          "type": "number"
                        },
                        "dividends": {
                          "type": "number"
                        },
                        "minorityInterests": {
                          "type": "number"
                        },
                        "otherAppropriations": {
                          "type": "number"
                        },
                        "retainedProfit": {
                          "type": "number"
                        }
                      }
                    },
                    "balanceSheet": {
                      "type": "object",
                      "properties": {
                        "totalTangibleAssets": {
                          "type": "number"
                        },
                        "totalIntangibleAssets": {
                          "type": "number"
                        },
                        "totalOtherFixedAssets": {
                          "type": "number"
                        },
                        "totalFixedAssets": {
                          "type": "number"
                        },
                        "totalInventories": {
                          "type": "number"
                        },
                        "tradeReceivables": {
                          "type": "number"
                        },
                        "miscellaneousReceivables": {
                          "type": "number"
                        },
                        "totalReceivables": {
                          "type": "number"
                        },
                        "cash": {
                          "type": "number"
                        },
                        "otherCurrentAssets": {
                          "type": "number"
                        },
                        "totalCurrentAssets": {
                          "type": "number"
                        },
                        "totalAssets": {
                          "type": "number"
                        },
                        "tradePayables": {
                          "type": "number"
                        },
                        "bankLiabilities": {
                          "type": "number"
                        },
                        "otherLoansOrFinance": {
                          "type": "number"
                        },
                        "miscellaneousLiabilities": {
                          "type": "number"
                        },
                        "totalCurrentLiabilities": {
                          "type": "number"
                        },
                        "bankLiabilitiesDueAfter1Year": {
                          "type": "number"
                        },
                        "otherLoansOrFinanceDueAfter1Year": {
                          "type": "number"
                        },
                        "miscellaneousLiabilitiesDueAfter1Year": {
                          "type": "number"
                        },
                        "totalLongTermLiabilities": {
                          "type": "number"
                        },
                        "totalLiabilities": {
                          "type": "number"
                        },
                        "calledUpShareCapital": {
                          "type": "number"
                        },
                        "revenueReserves": {
                          "type": "number"
                        },
                        "otherReserves": {
                          "type": "number"
                        },
                        "totalShareholdersEquity": {
                          "type": "number"
                        }
                      }
                    },
                    "otherFinancials": {
                      "type": "object",
                      "properties": {
                        "contingentLiabilities": {
                          "type": "string"
                        },
                        "workingCapital": {
                          "type": "number"
                        },
                        "netWorth": {
                          "type": "number"
                        }
                      }
                    },
                    "ratios": {
                      "type": "object",
                      "properties": {
                        "preTaxProfitMargin": {
                          "type": "number"
                        },
                        "returnOnCapitalEmployed": {
                          "type": "number"
                        },
                        "returnOnTotalAssetsEmployed": {
                          "type": "number"
                        },
                        "returnOnNetAssetsEmployed": {
                          "type": "number"
                        },
                        "salesOrNetWorkingCapital": {
                          "type": "number"
                        },
                        "stockTurnoverRatio": {
                          "type": "number"
                        },
                        "debtorDays": {
                          "type": "number"
                        },
                        "creditorDays": {
                          "type": "number"
                        },
                        "currentRatio": {
                          "type": "number"
                        },
                        "liquidityRatioOrAcidTest": {
                          "type": "number"
                        },
                        "currentDebtRatio": {
                          "type": "number"
                        },
                        "gearing": {
                          "type": "number"
                        },
                        "equityInPercentage": {
                          "type": "number"
                        },
                        "totalDebtRatio": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "localFinancialStatements": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "yearEndDate": {
                      "type": "string"
                    },
                    "numberOfWeeks": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "consolidatedAccounts": {
                      "type": "boolean"
                    },
                    "auditQualification": {
                      "type": "string"
                    },
                    "profitAndLoss": {
                      "type": "object",
                      "properties": {
                        "turnover": {
                          "type": "number"
                        },
                        "costOfSales": {
                          "type": "number"
                        },
                        "grossProfit": {
                          "type": "number"
                        },
                        "depreciation": {
                          "type": "number"
                        },
                        "auditFees": {
                          "type": "number"
                        },
                        "wagesAndSalaries": {
                          "type": "number"
                        },
                        "directorsRemuneration": {
                          "type": "number"
                        },
                        "operatingProfit": {
                          "type": "number"
                        },
                        "interestExpense": {
                          "type": "number"
                        },
                        "profitBeforeTax": {
                          "type": "number"
                        },
                        "taxation": {
                          "type": "number"
                        },
                        "profitAfterTax": {
                          "type": "number"
                        },
                        "dividends": {
                          "type": "number"
                        },
                        "retainedProfit": {
                          "type": "number"
                        }
                      }
                    },
                    "balanceSheet": {
                      "type": "object",
                      "properties": {
                        "tangibleAssets": {
                          "type": "number"
                        },
                        "intangibleAssets": {
                          "type": "number"
                        },
                        "totalFixedAssets": {
                          "type": "number"
                        },
                        "stock": {
                          "type": "number"
                        },
                        "tradeDebtors": {
                          "type": "number"
                        },
                        "otherDebtors": {
                          "type": "number"
                        },
                        "cash": {
                          "type": "number"
                        },
                        "miscCurrentAssets": {
                          "type": "number"
                        },
                        "totalCurrentAssets": {
                          "type": "number"
                        },
                        "totalAssets": {
                          "type": "number"
                        },
                        "tradeCreditors": {
                          "type": "number"
                        },
                        "bankBorrowingsCurrent": {
                          "type": "number"
                        },
                        "otherShortTermFinance": {
                          "type": "number"
                        },
                        "miscCurrentLiabilities": {
                          "type": "number"
                        },
                        "totalCurrentLiabilities": {
                          "type": "number"
                        },
                        "otherLongTermFinance": {
                          "type": "number"
                        },
                        "totalLongTermLiabilities": {
                          "type": "number"
                        },
                        "totalLiabilities": {
                          "type": "number"
                        },
                        "netAssets": {
                          "type": "number"
                        },
                        "issuedShareCapital": {
                          "type": "number"
                        },
                        "revaluationReserve": {
                          "type": "number"
                        },
                        "revenueReserves": {
                          "type": "number"
                        },
                        "otherReserves": {
                          "type": "number"
                        },
                        "totalShareholdersEquity": {
                          "type": "number"
                        }
                      }
                    },
                    "cashFlow": {
                      "type": "object",
                      "properties": {
                        "netCashFlowFromOperations": {
                          "type": "number"
                        },
                        "netCashFlowBeforeFinancing": {
                          "type": "number"
                        },
                        "netCashFlowFromFinancing": {
                          "type": "number"
                        },
                        "increaseInCash": {
                          "type": "number"
                        }
                      }
                    },
                    "otherFinancials": {
                      "type": "object",
                      "properties": {
                        "contingentLiabilities": {
                          "type": "boolean"
                        },
                        "bankOverdraftAndLTL": {
                          "type": "number"
                        },
                        "workingCapital": {
                          "type": "number"
                        },
                        "capitalEmployed": {
                          "type": "number"
                        },
                        "netWorth": {
                          "type": "number"
                        }
                      }
                    },
                    "ratios": {
                      "type": "object",
                      "properties": {
                        "preTaxProfitMargin": {
                          "type": "number"
                        },
                        "returnOnCapitalEmployed": {
                          "type": "number"
                        },
                        "returnOnTotalAssetsEmployed": {
                          "type": "number"
                        },
                        "returnOnNetAssetsEmployed": {
                          "type": "number"
                        },
                        "salesOrNetWorkingCapital": {
                          "type": "number"
                        },
                        "stocKTurnoverRatio": {
                          "type": "number"
                        },
                        "debtorDays": {
                          "type": "number"
                        },
                        "creditorDays": {
                          "type": "number"
                        },
                        "currentRatio": {
                          "type": "number"
                        },
                        "liquidityRatioOrAcidTest": {
                          "type": "number"
                        },
                        "currentDebtRatio": {
                          "type": "number"
                        },
                        "gearing": {
                          "type": "number"
                        },
                        "equityInPercentage": {
                          "type": "number"
                        },
                        "totalDebtRatio": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              },
              "paymentData": {
                "type": "object",
                "properties": {
                  "paymentsOnFile": {
                    "type": "number"
                  },
                  "paymentsOnTime": {
                    "type": "number"
                  },
                  "paymentsPaidLate": {
                    "type": "number"
                  },
                  "paymentsSentLegal": {
                    "type": "number"
                  },
                  "paymentsStillOwingLate": {
                    "type": "number"
                  },
                  "paymentsPaid0to30Days": {
                    "type": "number"
                  },
                  "highestInvoiceValueOutstandingLate": {
                    "type": "number"
                  },
                  "paymentsPaid90DaysplusLate": {
                    "type": "number"
                  },
                  "totalBalanceStillOwingLate": {
                    "type": "number"
                  },
                  "dbt": {
                    "type": "number"
                  },
                  "paymentsPaid61to90Days": {
                    "type": "number"
                  },
                  "totalBalanceStillOwing": {
                    "type": "number"
                  },
                  "payments31to60DaysLate": {
                    "type": "number"
                  },
                  "payments61to90DaysLate": {
                    "type": "number"
                  },
                  "highestInvoiceValueOutstanding": {
                    "type": "number"
                  },
                  "paymentsStillOwing": {
                    "type": "number"
                  },
                  "paymentsWithinTerms": {
                    "type": "number"
                  },
                  "payments0to30Dayslate": {
                    "type": "number"
                  },
                  "averageInvoiceValue": {
                    "type": "number"
                  },
                  "paymentsPaid31to60Days": {
                    "type": "number"
                  },
                  "paymentsPaid90Daysplus": {
                    "type": "number"
                  },
                  "totalInvoiceValues": {
                    "type": "number"
                  },
                  "paymentTrend": {
                    "type": "string"
                  },
                  "industryDBT": {
                    "type": "number"
                  }
                }
              },
              "negativeInformation": {
                "type": "object",
                "properties": {
                  "ccjSummary": {
                    "type": "object",
                    "properties": {
                      "exactRegistered": {
                        "type": "number"
                      },
                      "possibleRegistered": {
                        "type": "number"
                      }
                    }
                  },
                  "countyCourtJudgements": {
                    "type": "object",
                    "properties": {
                      "registered": {
                        "type": "object",
                        "properties": {
                          "exact": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ccjDate": {
                                  "type": "string"
                                },
                                "court": {
                                  "type": "string"
                                },
                                "ccjAmount": {
                                  "type": "number"
                                },
                                "caseNumber": {
                                  "type": "string"
                                },
                                "ccjStatus": {
                                  "type": "string"
                                },
                                "incomingRecordDetails": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "possible": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ccjDate": {
                                  "type": "string"
                                },
                                "court": {
                                  "type": "string"
                                },
                                "ccjAmount": {
                                  "type": "number"
                                },
                                "caseNumber": {
                                  "type": "string"
                                },
                                "ccjStatus": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "additionalInformation": {
                "type": "object",
                "properties": {
                  "companyHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "mortgageSummary": {
                    "type": "object",
                    "properties": {
                      "outstanding": {
                        "type": "number"
                      },
                      "satisfied": {
                        "type": "number"
                      }
                    }
                  },
                  "mortgageDetails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "mortgageType": {
                          "type": "string"
                        },
                        "dateChargeCreated": {
                          "type": "string"
                        },
                        "dateChargeRegistered": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "personsEntitled": {
                          "type": "string"
                        },
                        "amountSecured": {
                          "type": "string"
                        },
                        "details": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "commentaries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "commentaryText": {
                          "type": "string"
                        },
                        "positiveNegative": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "ratingHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string"
                        },
                        "companyValue": {
                          "type": "number"
                        },
                        "ratingDescription": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "creditLimitHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string"
                        },
                        "companyValue": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  },
                  "badDebtDetails": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "statementDate": {
                          "type": "string"
                        },
                        "registrationNumber": {
                          "type": "string"
                        },
                        "companyName": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "object",
                          "properties": {
                            "currency": {
                              "type": "string"
                            },
                            "value": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "example": {
          "GB": {
            "orderId": "N/A",
            "companyId": "GB-0-03836192",
            "dateOfOrder": "2019-10-23T16:39:07.116Z",
            "language": "en",
            "userId": "100000000",
            "report": {
              "companyId": "GB001-0-03836192",
              "language": "EN",
              "companySummary": {
                "businessName": "CREDITSAFE BUSINESS SOLUTIONS LIMITED",
                "country": "GB",
                "companyNumber": "UK03490298",
                "companyRegistrationNumber": 3836192,
                "mainActivity": {
                  "code": "7487",
                  "description": "Other business activities",
                  "classification": "SIC03"
                },
                "companyStatus": {
                  "status": "Active",
                  "description": "Active - Accounts Filed"
                },
                "latestTurnoverFigure": {
                  "value": 45245000
                },
                "latestShareholdersEquityFigure": {
                  "value": 11269000
                },
                "creditRating": {
                  "commonValue": "B",
                  "commonDescription": "Low Risk",
                  "creditLimit": {
                    "currency": "GBP",
                    "value": "785000"
                  },
                  "providerValue": {
                    "maxValue": "100",
                    "minValue": "1",
                    "value": "55"
                  },
                  "providerDescription": "Low Risk"
                }
              }
            }
          }
        }
      },
      "createFreshInvestigationRequest": {
        "type": "object",
        "properties": {
          "consent": {
            "type": "boolean"
          },
          "contactInfo": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "emailAddress": {
                "type": "string"
              },
              "telephoneNumber": {
                "type": "string"
              },
              "company": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "chargeReference": {
            "type": "string"
          },
          "searchCriteria": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "additionalInfo": {
                "type": "string"
              },
              "telephoneNumber": {
                "type": "string"
              },
              "address": {
                "type": "object",
                "properties": {
                  "simple": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  }
                }
              },
              "regNo": {
                "type": "string"
              },
              "vatNo": {
                "type": "string"
              },
              "countryCode": {
                "type": "string"
              }
            }
          }
        }
      },
      "listFreshInvestigationResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer"
          },
          "orders": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "orderID": {
                  "type": "integer"
                },
                "userID": {
                  "type": "string"
                },
                "creationDate": {
                  "type": "string"
                },
                "lastStatusChangeDate": {
                  "type": "string"
                },
                "transactionID": {
                  "type": "integer"
                },
                "chargeReference": {
                  "type": "string"
                },
                "contactDetails": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "emailAddress": {
                      "type": "string"
                    },
                    "telephoneNumber": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "consent": {
                  "type": "boolean"
                },
                "searchCriteria": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "vatNo": {
                      "type": "string"
                    },
                    "regNo": {
                      "type": "string"
                    },
                    "additionalInfo": {
                      "type": "string"
                    },
                    "address": {
                      "type": "object",
                      "properties": {
                        "simple": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "postcode": {
                          "type": "string"
                        }
                      }
                    },
                    "countryCode": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "completedFreshInvestigation": {
        "type": "object",
        "properties": {
          "chargeReference": {
            "type": "string"
          },
          "contactDetails": {
            "properties": {
              "emailAddress": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "telephoneNumber": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "creationDate": {
            "type": "string"
          },
          "lastStatusChangeDate": {
            "type": "string"
          },
          "orderID": {
            "type": "integer"
          },
          "reportDate": {
            "type": "string"
          },
          "searchCriteria": {
            "properties": {
              "additionalInfo": {
                "type": "string"
              },
              "address": {
                "properties": {
                  "city": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "string"
                  },
                  "simple": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "countryCode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "regNo": {
                "type": "string"
              },
              "vatNo": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "sections": {
            "items": {
              "anyOf": [
                {
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "status": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "transactionID": {
            "type": "integer"
          }
        }
      },
      "submittedFreshInvestigationRepsonse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "orderID": {
            "type": "string",
            "description": "Fresh Investigation Unique Identifier"
          },
          "transactionID": {
            "type": "string",
            "description": "Fresh Investigation Internal Identifier"
          }
        }
      },
      "accessCountriesResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "countryAccess": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "creditsafeConnectOnlineReports": {
                  "type": "array",
                  "description": "Country usage for Company Reports service",
                  "items": {
                    "type": "object",
                    "properties": {
                      "countryName": {
                        "type": "string"
                      },
                      "templateName": {
                        "type": "string",
                        "description": "Company Report template. Full reports are default"
                      },
                      "countryIso2": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Date of when the service was enabled"
                      },
                      "expireDate": {
                        "type": "string",
                        "description": "Date of when the service will expire"
                      },
                      "paid": {
                        "type": "integer",
                        "description": "Measure of total usage available in the service"
                      },
                      "used": {
                        "type": "integer",
                        "description": "Service usage"
                      }
                    }
                  }
                },
                "creditsafeConnectOfflineReports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "countryIso2": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Date of when the service was enabled"
                      },
                      "expireDate": {
                        "type": "string",
                        "description": "Date of when the service will expire"
                      },
                      "paid": {
                        "type": "integer",
                        "description": "Measure of total usage available in the service"
                      },
                      "used": {
                        "type": "integer",
                        "description": "Service usage"
                      }
                    }
                  }
                },
                "creditsafeConnectMonitoring": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Date of when the service was enabled"
                      },
                      "expireDate": {
                        "type": "string",
                        "description": "Date of when the service will expire"
                      },
                      "paid": {
                        "type": "integer",
                        "description": "Measure of total usage available in the service"
                      },
                      "used": {
                        "type": "integer",
                        "description": "Service usage"
                      }
                    }
                  }
                },
                "creditsafeConnectDirectorReports": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "countryName": {
                        "type": "string"
                      },
                      "countryIso2": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Date of when the service was enabled"
                      },
                      "expireDate": {
                        "type": "string",
                        "description": "Date of when the service will expire"
                      },
                      "paid": {
                        "type": "integer",
                        "description": "Measure of total usage available in the service"
                      },
                      "used": {
                        "type": "integer",
                        "description": "Service usage"
                      }
                    }
                  }
                },
                "creditsafeConnectImageDocuments": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "countryIso2": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Date of when the service was enabled"
                      },
                      "expireDate": {
                        "type": "string",
                        "description": "Date of when the service will expire"
                      },
                      "paid": {
                        "type": "integer",
                        "description": "Measure of total usage available in the service"
                      },
                      "used": {
                        "type": "integer",
                        "description": "Service usage"
                      }
                    }
                  }
                },
                "creditsafeConnectBankValidation": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Date of when the service was enabled"
                      },
                      "expireDate": {
                        "type": "string",
                        "description": "Date of when the service will expire"
                      },
                      "paid": {
                        "type": "integer",
                        "description": "Measure of total usage available in the service"
                      },
                      "used": {
                        "type": "integer",
                        "description": "Service usage"
                      }
                    }
                  }
                },
                "creditsafeConnectBankVerification": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string",
                        "description": "Date of when the service was enabled"
                      },
                      "expireDate": {
                        "type": "string",
                        "description": "Date of when the service will expire"
                      },
                      "paid": {
                        "type": "integer",
                        "description": "Measure of total usage available in the service"
                      },
                      "used": {
                        "type": "integer",
                        "description": "Service usage"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "paging": {
        "type": "object",
        "description": "Paging parameters.",
        "properties": {
          "size": {
            "type": "number",
            "description": "The maximum number of results returned per page.",
            "example": 10
          },
          "prev": {
            "type": "number",
            "description": "The page number of the previous page, null if there is no previous page available.",
            "example": 0
          },
          "next": {
            "type": "number",
            "description": "The page number of the next page, null if there is no next page available.",
            "example": 2
          },
          "last": {
            "type": "number",
            "description": "The page number of the last page.",
            "example": 3
          }
        }
      },
      "userDetails": {
        "type": "object",
        "properties": {
          "countryCode": {
            "type": "string",
            "example": "US",
            "description": "The ISO/Alpha 2 format country code for the user's country."
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "example": "2020-01-01T00:00:00",
            "description": "The date that the Global Monitoring user account was created."
          },
          "csCustomerId": {
            "type": "number",
            "example": 101662701,
            "description": "The unique identifier for the user's customer account, used across the Creditsafe product suite."
          },
          "csUserId": {
            "type": "number",
            "example": 101445010,
            "description": "The unique identifier for the user's account, used across the Creditsafe product suite."
          },
          "isAutoTracker": {
            "type": "boolean",
            "example": false,
            "description": "If auto-tracker is enabled, any companies that you pull a credit report for are automatically added to the portfolio that you have selected as default."
          },
          "languageCode": {
            "type": "string",
            "example": "en",
            "description": "The language code for the user's preferred language."
          },
          "lastAccessDate": {
            "type": "string",
            "format": "date-time",
            "example": "2020-02-01T14:30:00",
            "description": "The date the the user last accessed the Global Monitoring product."
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "example": "2020-02-01T14:30:00",
            "description": "The date that the user's details were last modified."
          },
          "contractEndDate": {
            "type": "string",
            "format": "date-time",
            "example": "2021-01-01T00:00:00",
            "description": "The date that the user's contract is currently set to expire. From this date onward, the user will be unable to access to Global Monitoring product."
          },
          "userId": {
            "type": "number",
            "example": 10804,
            "description": "The internal identifier used to reference the user's account through the Global Monitoring product."
          }
        }
      },
      "company": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The connectId of the company that triggered the `notificationEvent`. A connectId is the primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
            "example": "US-X-US22384484"
          },
          "safeNumber": {
            "type": "string",
            "description": "The Safe Number (Creditsafe's identifier on all Companies owned in the Creditsafe Universe) of the company that triggered the `notificationEvent`.",
            "example": "US22384484"
          },
          "name": {
            "type": "string",
            "description": "The name of the company that triggered the `notificationEvent`.",
            "example": "GOOGLE LLC"
          },
          "countryCode": {
            "type": "string",
            "description": "ISO/Alpha 2 format country code of the company that triggered the `notificationEvent`.",
            "example": "US"
          },
          "portfolioId": {
            "type": "number",
            "description": "The portfolio Id of the portfolio that contains the company that triggered the `notificationEvent`.",
            "example": 589960
          },
          "portfolioName": {
            "type": "string",
            "description": "The name of the portfolio that contains the company that triggered the `notificationEvent`.",
            "example": "Default"
          }
        }
      },
      "event": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "number",
            "description": "The unique identifier for the event.",
            "example": 192873729
          },
          "companyId": {
            "type": "number",
            "description": "The Safe Number (Creditsafe's identifier on all Companies owned in the Creditsafe Universe) of the company that triggered the event.",
            "example": "UK00004371"
          },
          "portfolioId": {
            "type": "number",
            "description": "The portfolio Id of the portfolio that contains the company that you requested event information for.",
            "example": 589960
          },
          "ruleName": {
            "type": "string",
            "description": "A short description of the company event.",
            "example": "Credit Limit Change"
          },
          "localEventCode": {
            "type": "string",
            "description": "The local event code for the event.",
            "example": "CL"
          },
          "globalEventCode": {
            "type": "string",
            "description": "The global event code that has been mapped to the local event.",
            "example": "CL"
          },
          "newValue": {
            "type": "string",
            "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
            "example": 7050000
          },
          "oldValue": {
            "type": "string",
            "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
            "example": 6100000
          },
          "eventDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date that the event occured.",
            "example": "2019-03-14T22:21:50"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date that the event was created in the Creditsafe database.",
            "example": "2019-03-14T22:21:50"
          }
        }
      },
      "notificationEvent": {
        "type": "object",
        "properties": {
          "company": {
            "$ref": "#/components/schemas/company"
          },
          "eventId": {
            "type": "number",
            "description": "The unique identifier of the event that triggered the generation of the `notificationEvent`. This identifier is consistent across all portfolios in the Global Monitoring product.",
            "example": 426992366
          },
          "eventDate": {
            "type": "string",
            "format": "date-time",
            "description": "The date that the event occured.",
            "example": "2019-12-06T08:23:37"
          },
          "newValue": {
            "type": "string",
            "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
            "example": "1600 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043-1351"
          },
          "oldValue": {
            "type": "string",
            "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
            "example": "1604 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043-1351"
          },
          "notificationEventId": {
            "type": "number",
            "description": "The unique identifier for the `notificationEvent`. This identifier is tied to a specific `eventId` and `portfolioId`.",
            "example": 51861887
          },
          "ruleCode": {
            "type": "number",
            "description": "The unique identifier for the `ruleCode` that triggered the generation of the `notificationEvent`.",
            "example": 105
          },
          "ruleName": {
            "type": "string",
            "description": "The name of the notification event rule that triggered the generation of the `notificationEvent`.",
            "example": "Address"
          }
        }
      },
      "companyEventsResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "number",
            "description": "The total number of events returned for the given company.",
            "example": 36
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/event"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging"
          }
        }
      },
      "notificationEventsResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "number",
            "description": "The total number of events returned for the given company.",
            "example": 36
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/notificationEvent"
            }
          },
          "paging": {
            "$ref": "#/components/schemas/paging"
          }
        }
      },
      "portfolioRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "emails": {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "emailAddress": {
                "type": "string"
              }
            }
          },
          "emailSubject": {
            "type": "string"
          },
          "emailLanguage": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          }
        },
        "example": {
          "name": "My New Portfolio",
          "isDefault": "true"
        },
        "required": [
          "name",
          "isDefault"
        ]
      },
      "eventRulesResponse": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "Shows whether the notification event rule has been enabled for the given portfolio.",
            "example": 0
          },
          "ruleCode": {
            "type": "number",
            "description": "The unique identifier for the notification event rule.",
            "example": 101
          },
          "ruleCountryCode": {
            "type": "string",
            "description": "The ISO/Alpha 2 format country code for the notification event rule. \"XX\" is used for global rules that apply to companies from all countries.",
            "example": "XX"
          },
          "ruleType": {
            "type": "number",
            "description": "The unique identifier of the `ruleType` for the notification event rule.",
            "example": 4
          },
          "ruleTypeName": {
            "type": "string",
            "description": "A short description of the `ruleType` for the notification event rule.",
            "example": "Rating band change - 3 input"
          },
          "name": {
            "type": "string",
            "description": "The name for the notification event rule.",
            "example": "International Rating | Reduce by {0} Band(s) OR Less than Band {1}"
          },
          "param0": {
            "type": "string",
            "description": "Some notification event rules may include input parameters used to tailor the notifications generated to your preference.",
            "example": "1"
          },
          "param1": {
            "type": "string",
            "description": "Some notification event rules may include input parameters used to tailor the notifications generated to your preference.",
            "example": "A"
          }
        }
      },
      "guidSuccessResponse": {
        "type": "object",
        "properties": {
          "GUIDList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "friendlyName": {
                  "type": "string"
                },
                "GUID": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "serviceLine": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "GUIDList": [
            {
              "friendlyName": "Check and Decide Demo Tree",
              "GUID": "repoObj_0ed6a4aa_16e17d977e9_07ffb16e17d977e9",
              "type": "Credit Approval",
              "serviceLine": "dec_eng_cas"
            },
            {
              "friendlyName": "Connect Demo Tree",
              "GUID": "repoObj_684c5516_16633e53575_07ffa16633e53575",
              "type": "Demo"
            }
          ]
        }
      },
      "complianceSearchResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "body": {
                "type": "object",
                "properties": {
                  "searchResult": {
                    "type": "object",
                    "properties": {
                      "records": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "record": {
                              "type": "integer"
                            },
                            "recordDetails": {
                              "type": "object",
                              "properties": {
                                "acceptListID": {
                                  "type": "integer"
                                },
                                "addedToAcceptList": {
                                  "type": "boolean"
                                },
                                "division": {
                                  "type": "string"
                                },
                                "dppa": {
                                  "type": "string"
                                },
                                "eftType": {
                                  "type": "string"
                                },
                                "entityType": {
                                  "type": "string"
                                },
                                "gender": {
                                  "type": "string"
                                },
                                "glb": {
                                  "type": "integer"
                                },
                                "iDs": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "number": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "lastUpdatedDate": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "object",
                                  "properties": {
                                    "full": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "recordState": {
                                  "type": "object",
                                  "properties": {
                                    "addedToAcceptList": {
                                      "type": "boolean"
                                    },
                                    "alertState": {
                                      "type": "string"
                                    },
                                    "assignedTo": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "assignmentType": {
                                      "type": "string"
                                    },
                                    "division": {
                                      "type": "string"
                                    },
                                    "history": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "date": {
                                            "type": "string"
                                          },
                                          "event": {
                                            "type": "string"
                                          },
                                          "note": {
                                            "type": "string"
                                          },
                                          "user": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "matchStates": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "matchID": {
                                            "type": "integer"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "searchDate": {
                                  "type": "string"
                                }
                              }
                            },
                            "resultID": {
                              "type": "integer"
                            },
                            "runID": {
                              "type": "integer"
                            },
                            "watchlist": {
                              "type": "object",
                              "properties": {
                                "matches": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "acceptListID": {
                                        "type": "integer"
                                      },
                                      "addedToAcceptList": {
                                        "type": "boolean"
                                      },
                                      "addressName": {
                                        "type": "boolean"
                                      },
                                      "autoFalsePositive": {
                                        "type": "boolean"
                                      },
                                      "bestAddressIsPartial": {
                                        "type": "boolean"
                                      },
                                      "bestCountryScore": {
                                        "type": "integer"
                                      },
                                      "bestCountryType": {
                                        "type": "string"
                                      },
                                      "bestDOBIsPartial": {
                                        "type": "boolean"
                                      },
                                      "bestName": {
                                        "type": "string"
                                      },
                                      "bestNameScore": {
                                        "type": "integer"
                                      },
                                      "checkSum": {
                                        "type": "integer"
                                      },
                                      "conflicts": {
                                        "type": "object",
                                        "properties": {
                                          "addressConflict": {
                                            "type": "boolean"
                                          },
                                          "citizenshipConflict": {
                                            "type": "boolean"
                                          },
                                          "countryConflict": {
                                            "type": "boolean"
                                          },
                                          "dobConflict": {
                                            "type": "boolean"
                                          },
                                          "entityTypeConflict": {
                                            "type": "boolean"
                                          },
                                          "genderConflict": {
                                            "type": "boolean"
                                          },
                                          "idConflict": {
                                            "type": "boolean"
                                          },
                                          "phoneConflict": {
                                            "type": "boolean"
                                          }
                                        }
                                      },
                                      "entityDetails": {
                                        "type": "object",
                                        "properties": {
                                          "additionalInfo": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "comments": {
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "type": "integer"
                                                },
                                                "type": {
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "addresses": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "city": {
                                                  "type": "string"
                                                },
                                                "country": {
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "type": "integer"
                                                },
                                                "postalCode": {
                                                  "type": "string"
                                                },
                                                "street1": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "akAs": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "category": {
                                                  "type": "string"
                                                },
                                                "id": {
                                                  "type": "integer"
                                                },
                                                "name": {
                                                  "type": "object",
                                                  "properties": {
                                                    "full": {
                                                      "type": "string"
                                                    }
                                                  }
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "comments": {
                                            "type": "string"
                                          },
                                          "dateListed": {
                                            "type": "string"
                                          },
                                          "entityType": {
                                            "type": "string"
                                          },
                                          "iDs": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "integer"
                                                },
                                                "number": {
                                                  "type": "string"
                                                },
                                                "type": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          },
                                          "listReferenceNumber": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "object",
                                            "properties": {
                                              "full": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "reasonListed": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "entityName": {
                                        "type": "string"
                                      },
                                      "entityScore": {
                                        "type": "integer"
                                      },
                                      "entityUniqueID": {
                                        "type": "string"
                                      },
                                      "falsePositive": {
                                        "type": "boolean"
                                      },
                                      "file": {
                                        "type": "object",
                                        "properties": {
                                          "build": {
                                            "type": "string"
                                          },
                                          "custom": {
                                            "type": "boolean"
                                          },
                                          "id": {
                                            "type": "integer"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "published": {
                                            "type": "string"
                                          },
                                          "type": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "gatewayOFACScreeningIndicatorMatch": {
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "type": "integer"
                                      },
                                      "matchReAlert": {
                                        "type": "boolean"
                                      },
                                      "previousResultID": {
                                        "type": "integer"
                                      },
                                      "reasonListed": {
                                        "type": "string"
                                      },
                                      "resultDate": {
                                        "type": "string"
                                      },
                                      "secondaryOFACScreeningIndicatorMatch": {
                                        "type": "boolean"
                                      },
                                      "trueMatch": {
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                },
                                "status": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "searchEngineVersion": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "compliancePreDefinedSearches": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer",
            "example": [
              3
            ]
          },
          "predefinedSearches": {
            "type": "array",
            "items": {
              "type": "object",
              "example": {
                "description": "Searches the Full LexisNexis Compliance File with 100 confidence",
                "name": "c-100-fullFile",
                "productName": "LexisNexis",
                "categoryName": "full",
                "confidence": 100
              },
              "properties": {
                "name": {
                  "type": "string",
                  "example": [
                    "c-100-fullFile"
                  ]
                },
                "categoryName": {
                  "type": "string",
                  "example": [
                    "full"
                  ]
                },
                "productName": {
                  "type": "string",
                  "example": [
                    "LexisNexis"
                  ]
                },
                "description": {
                  "type": "string",
                  "example": [
                    "Searches the Full LexisNexis Compliance File with 100 confidence"
                  ]
                },
                "confidence": {
                  "type": "integer",
                  "example": [
                    100
                  ]
                }
              }
            }
          }
        }
      },
      "bankMatchVerify": {
        "type": "object",
        "properties": {
          "companyNumber": {
            "type": "string"
          },
          "accountNumber": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "ibanResult": {
            "type": "string",
            "description": "Match or No Match"
          },
          "ibanText": {
            "type": "string"
          },
          "logDate": {
            "type": "string"
          },
          "safeNumber": {
            "type": "string"
          },
          "scanResult": {
            "type": "string",
            "description": "Match or No Match"
          },
          "scanText": {
            "type": "string"
          },
          "sortCode": {
            "type": "string"
          },
          "statusResult": {
            "type": "string",
            "description": "Request status, e.g. Success, Error, Warning"
          },
          "statusText": {
            "type": "string",
            "description": "Explanation for error or warning, if applicable, otherwise empty quotation marks"
          },
          "vatResult": {
            "type": "string",
            "description": "Match or No Match"
          },
          "vatText": {
            "type": "string"
          }
        },
        "example": {
          "accountNumber": "66374957",
          "companyNumber": "X9999999",
          "iban": "GB55TEST08999966374957",
          "ibanResult": "No Match",
          "ibanText": "The IBAN provided does not match the company UK07499628.",
          "logDate": "2020-06-04T11:04:32.7301608+00:00",
          "safeNumber": "UK07499628",
          "scanResult": "No Match",
          "scanText": "The Sort Code and Account Number provided does not match the company UK07499628.",
          "sortCode": "089999",
          "statusResult": "Success",
          "statusText": "",
          "vatResult": "Match",
          "vatText": "The VAT provided matches the company UK07499628."
        }
      },
      "bankMatchValidate": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "ibanResult": {
            "type": "string",
            "description": "Match or No Match"
          },
          "ibanText": {
            "type": "string"
          },
          "logDate": {
            "type": "string"
          },
          "safeNumber": {
            "type": "string"
          },
          "scanResult": {
            "type": "string",
            "description": "Match or No Match"
          },
          "scanText": {
            "type": "string"
          },
          "sortCode": {
            "type": "string"
          },
          "statusResult": {
            "type": "string",
            "description": "Request status, e.g. Success, Error, Warning"
          },
          "statusText": {
            "type": "string",
            "description": "Explanation for error or warning, if applicable, otherwise empty quotation marks"
          },
          "vatResult": {
            "type": "string",
            "description": "Only applicable to Verification"
          },
          "vatText": {
            "type": "string"
          }
        },
        "example": {
          "accountNumber": "66374958",
          "iban": "GB55TEST08999966374958",
          "ibanResult": "Valid",
          "ibanText": "This IBAN is Valid",
          "logDate": "2020-06-04T11:04:32.6716919+00:00",
          "safeNumber": "UK07499628",
          "scanResult": "Valid",
          "scanText": "This SCAN is Valid",
          "sortCode": "089999",
          "statusResult": "Success",
          "statusText": "",
          "vatResult": "Empty",
          "vatText": "Verify Only"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}